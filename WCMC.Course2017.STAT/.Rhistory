library(WCMC.Course2017.STAT)
library(opencpu)
opencpu$browse('library/WCMC.Course2017.STAT/www')
library(WCMC.Course2017.STAT)
opencpu$browse('library/WCMC.Course2017.STAT/www')
library(WCMC.Course2017.STAT)
library(WCMC.Course2017.STAT)
library(opencpu)
opencpu$browse("ocpu/library/WCMC.Course2017.STAT")
opencpu$browse("library/WCMC.Course2017.STAT")
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Course2017.STAT)
library(WCMC.Course2017.STAT)
library(WCMC.Course2017.STAT)
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Course2017.STAT)
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Course2017.STAT)
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Course2017.STAT)
library(WCMC.Course2017.STAT)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Course2017.STAT)
launch_WCMC_DA()
launch_WCMC_DA()
opencpu$start()
opencpu::opencpu$start()
launch_WCMC_DA()
library(pacman)
?p_load_gh
launch_WCMC_DA <- function() {
# devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA")
pacman::p_load_gh("slfan2013/WCMC_DA/WCMC.Stat.PCA",
"slfan2013/WCMC_DA/WCMC.Stat.TTest")
opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
}
launch_WCMC_DA()
launch_WCMC_DA <- function() {
# devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA")
pacman::p_load_gh(c("slfan2013/WCMC_DA/WCMC.Stat.PCA",
"slfan2013/WCMC_DA/WCMC.Stat.TTest"))
opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
}
launch_WCMC_DA()
launch_WCMC_DA <- function() {
# devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA")
pacman::p_load_gh(c("slfan2013/WCMC_DA/WCMC.Stat.PCA",
"slfan2013/WCMC_DA/WCMC.Stat.tTest"))
opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
}
launch_WCMC_DA()
launch_WCMC_DA <- function() {
# devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA")
pacman::p_load_gh(c("slfan2013/WCMC_DA/WCMC.Stat.PCA",
"slfan2013/WCMC_DA/WCMC.Stat.Boxplot"))
opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
}
launch_WCMC_DA()
launch_WCMC_DA <- function() {
# devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA")
pacman::p_install_gh(c("slfan2013/WCMC_DA/WCMC.Stat.PCA",
"slfan2013/WCMC_DA/WCMC.Stat.Boxplot"))
opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
}
launch_WCMC_DA()
launch_WCMC_DA <- function() {
# devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA")
pacman::p_install_gh(c("slfan2013/WCMC_DA/WCMC.Stat.PCA",
"slfan2013/WCMC_DA/WCMC.Stat.Boxplot"))
opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
}
launch_WCMC_DA()
launch_WCMC_DA <- function() {
# devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA")
pacman::p_install_gh(c("slfan2013/WCMC_DA/WCMC.Stat.PCA"))
opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
}
launch_WCMC_DA()
launch_WCMC_DA <- function() {
# devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA")
pacman::p_install_gh("slfan2013/WCMC_DA/WCMC.Stat.PCA")
opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
}
launch_WCMC_DA()
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA")
launch_WCMC_DA <- function() {
# devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA")
# pacman::p_install_gh("slfan2013/WCMC_DA/WCMC.Stat.PCA")
opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
}
launch_WCMC_DA <- function() {
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA")
# pacman::p_install_gh("slfan2013/WCMC_DA/WCMC.Stat.PCA")
opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
}
launch_WCMC_DA()
launch_WCMC_DA <- function() {
# devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA")
pacman::p_install_gh("slfan2013/WCMC_DA/WCMC.Stat.PCA")
opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
}
launch_WCMC_DA <- function() {
# devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA")
pacman::p_install_gh("slfan2013/WCMC_DA/WCMC.Stat.PCA")
# opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
}
launch_WCMC_DA()
launch_WCMC_DA <- function() {
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA")
# opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
}
launch_WCMC_DA()
library(WCMC.Course2017.STAT)
library(opencpu);
opencpu$browse("library/WCMC.DA/www")
library(WCMC.Course2017.STAT)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Course2017.STAT)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Course2017.STAT)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Course2017.STAT)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Course2017.STAT)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Course2017.STAT)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
7/1598
1965/54338
library(WCMC.Course2017.STAT)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Course2017.STAT)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Course2017.STAT)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Course2017.STAT)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Course2017.STAT)
opencpu
opencpu::opencpu$start()
library(WCMC.Course2017.STAT)
update_childs <- function() {
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.Boxplot",force=T)
# child pkg 2
# chld pkg 3
# opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
}
library(WCMC.Course2017.STAT)
library(opencpu)
remove.packages("WCMC.Stat.Boxplot")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.power",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.Power",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.Scale",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.tTest",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.mTIC",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.SampleSpecific",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.Quantile",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.PQN",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.Contrast",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.log",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.Power",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.Scale",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.tTest",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PairedTTest",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.OneWayANOVA",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.OneWayRepANOVA",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.TwoWayANOVA",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.TwoWayRepANOVA",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.TwoWayMixedANOVA",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.FoldChanges",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.Boxplot",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA",force=T)
update_childs <- function() {
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.mTIC",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.SampleSpecific",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.Quantile",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.PQN",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.Contrast",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.log",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.Power",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.Scale",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.tTest",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PairedTTest",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.OneWayANOVA",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.OneWayRepANOVA",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.TwoWayANOVA",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.TwoWayRepANOVA",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.TwoWayMixedANOVA",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.FoldChanges",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.Boxplot",force=T)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA",force=T)
}
update_childs()
opencpu::opencpu$browse()
library(opencpu)
opencpu::opencpu$browse()
opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
install_github('barupal/metamapp')
devtools::install_github('barupal/metamapp')
opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
remove.packages("MetaMapp2016")
opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
opencpu::opencpu$browse()
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.mTIC")
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.SampleSpecific")
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.Quantile")
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.PQN")
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.Contrast")
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.log")
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.Contrast")
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.TwoWayRepANOVA")
library(WCMC.Course2017.STAT)
opencpu::opencpu$browse()
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.tTest")
opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
opencpu::opencpu$browse("library/WCMC.Course2017.STAT/www")
.libPaths()
?.libPaths()
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Stat.OneWayRepANOVA")))
purl <- "http://wcmc-da.fiehnlab.ucdavis.edu/ocpu/library/devtools/R/install_github"
library(RCurl)
library(jsonlite)
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Stat.OneWayRepANOVA")))
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.OneWayRepANOVA")
?install.packages
library(WCMC.Course2017.STAT)
purl <- "http://wcmc-da.fiehnlab.ucdavis.edu/ocpu/library/devtools/R/install_github"
library(RCurl)
library(jsonlite)
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Course2017.STAT")))
purl <- "http://wcmc-da.fiehnlab.ucdavis.edu/ocpu/library/devtools/R/install_github"
library(RCurl)
library(jsonlite)
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Course2017.STAT")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Course2017.STAT",force=T)))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Course2017.STAT",force=T)))
library(WCMC.Course2017.STAT)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
devtools::install("C:\\Users\\Sili Fan\\Documents\\GitHub\\WCMC_DA\\WCMC.Normalization.SampleSpecific")
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www");
devtools
library(devtools)
install_github("slfan2013/WCMC_DA/WCMC.Normalization.mTIC")
system("ls -F")
system("ls")
system("CMD ls -F")
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization");
?opencpu
?install.packages
library(WCMC.Course2017.STAT)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization");
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www");
devtools::install_github("slfan2013/WCMC_DA/WCMC.Fansly");
library(WCMC.Course2017.STAT)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Course2017.STAT)
library(opencpu);
opencpu$browse("library/WCMC.Normalization/www")
library(WCMC.Course2017.STAT)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization");
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Course2017.STAT)
<<<<<<< HEAD
library(WCMC.Course2017.STAT)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
=======
.rs.restartR()
library(devtools)
library(opencpu)
library(ggplot2)
library(data.table)
.rs.restartR()
library(data.table)
.rs.restartR()
<<<<<<< HEAD
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Fansly_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.mTIC_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.SampleSpecific_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.Quantile_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.PQN_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.Contrast_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.log_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.Power_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.Scale_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.tTest_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.PairedTTest_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.OneWayANOVA_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.OneWayRepANOVA_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.TwoWayANOVA_0.1.0.tar.gz",repos=NULL)
# install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.TwoWayRepANOVA_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.TwoWayMixedANOVA_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.FoldChanges_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.Boxplot_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.PCA_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.VolcanoPlot_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.HeatMap_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.Batch_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.LOESS_0.1.0.tar.gz",repos=NULL)
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization_0.1.0.tar.gz",repos=NULL)
purl <- "http://wcmc-da.fiehnlab.ucdavis.edu/ocpu/library/utils/R/install.packages"
library(RCurl)
library(jsonlite)
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Course2017.STAT_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Fansly_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.mTIC_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.SampleSpecific_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.Quantile_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.PQN_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.Contrast_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.log_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.Power_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.Scale_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.tTest_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.PairedTTest_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.OneWayANOVA_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.OneWayRepANOVA_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.TwoWayANOVA_0.1.0.tar.gz")))
# getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
# postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.TwoWayRepANOVA_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.TwoWayMixedANOVA_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.FoldChanges_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.Boxplot_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.PCA_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.VolcanoPlot_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.HeatMap_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.Batch_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization.LOESS_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Normalization_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="barupal/metamapp",repos=NULL)))
=======
>>>>>>> 0eed7fb23bc394eefbab4a6297c5508e7d192e83
>>>>>>> 6c199c158bc9c59de9103371469a72530f6bb5eb
library(WCMC.Course2017.STAT)
