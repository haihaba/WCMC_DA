library(WCMC.MasterController)
install.packages('devtools', repos="http://cran.rstudio.com/")
library(devtools)
install.packages('pacman', repos="http://cran.rstudio.com/")
library(pacman)
install.packages('opencpu', repos="http://cran.rstudio.com/")
library(opencpu)
install.packages('devtools', repos="http://cran.rstudio.com/")
library(devtools)
install.packages('pacman', repos="http://cran.rstudio.com/")
library(pacman)
install.packages('opencpu', repos="http://cran.rstudio.com/")
library(opencpu)
install_github('slfan2013/WCMC_DA/WCMC.MasterController')
install.packages("devtools", repos = "http://cran.rstudio.com/")
install.packages("pacman", repos = "http://cran.rstudio.com/")
install.packages("opencpu", repos = "http://cran.rstudio.com/")
install.packages("pacman", repos = "http://cran.rstudio.com/")
install.packages("opencpu", repos = "http://cran.rstudio.com/")
install.packages('devtools', repos="http://cran.rstudio.com/")
library(devtools)
install.packages('pacman', repos="http://cran.rstudio.com/")
library(pacman)
install.packages('opencpu', repos="http://cran.rstudio.com/")
library(opencpu)
install_github('slfan2013/WCMC_DA/WCMC.MasterController')
library(WCMC.MasterController)
library(devtools)
library(metabox.stat)
library(opencpu)
opencpu$browse('library/metabox.stat/www')
opencpu$browse('library/MetaMapp2016/www')
install_github("slfan2013/WCMC_DA/WCMC.MasterController")
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
?remove.p''
?remove.packages
remove.packages("WCMC.Normalization.PQN")
devtools::install_github("slfan2013/WCMC_DA/WCMC.Normalization.PQN")
purl <- "http://wcmc-da.fiehnlab.ucdavis.edu/ocpu/library/devtools/R/install_github"
library(RCurl)
library(jsonlite)
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Course2017.STAT")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Fansly")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Normalization.mTIC")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Normalization.SampleSpecific")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Normalization.Quantile")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Normalization.PQN")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Normalization.Contrast")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Normalization.log")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Normalization.Power")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Normalization.Scale")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Stat.tTest")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Stat.PairedTTest")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Stat.OneWayANOVA")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Stat.OneWayRepANOVA")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Stat.TwoWayANOVA")))
# getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Stat.TwoWayRepANOVA")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Stat.TwoWayMixedANOVA")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Stat.FoldChanges")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Stat.Boxplot")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Stat.PCA")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Stat.VolcanoPlot")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="slfan2013/WCMC_DA/WCMC.Stat.HeatMap")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),postfields=toJSON(list(repo="barupal/metamapp")))
beepr::beep()
