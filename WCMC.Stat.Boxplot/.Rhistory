<<<<<<< HEAD
7.43	16149	28123	2310	18716	25985	1531	21407	2243	3808	638	1306	3600	22853	26569	2201	26933	20746	1736	2377	18163
7.44	35906	64172	34184	41403	55706	42947	43317	56483	43239	60018	28630	49406	50781	58746	50270	57954	46781	45512	30021	41199
7.55	3137	3759	2792	3456	3332	3271	4211	3800	1067	3427	3521	4222	3242	3441	2992	3666	3018	3062	2902	2988
7.59				18564					16475	15912
7.87	3911	5834	3493	4447	5544	4430	4504	1005	4431	4930	3386	4612	4935	4990	4635	5030	3989	4630	3550	4226
7.92	3385	4608	2379	3262	2979	3491	3653	3363	3197	2341	44260	2977	2618	6388	2387	3390	3459	3379	2634	2645
8.09	3437	5439	993	3291	4034	1474	3167	3986	4467	4200	3216	4281	4389	1718	3726	3998	3300	4405	3403	5040
8.10	6961	11268	6842	7360	8461	7621	6723	7655	10211	8913	7064	9016	10431	9355	7634	8041	7938	8794	7444	10218
8.18		5303		5976	5279	6015	5830	5912	5590		5850	5200	5989	6122	5857			833	5892	5830
8.23	3003	4186	2609	3211	3409	3516	3529	3698	3289	2936	3160	3055	4786	2845	2706	3465	3466	2612	2963	3221
8.30	917	1068	6903	8471	1889	8885	8532	1934	8197	8101	6764	2079	1434	7972	7884	8412	7530	8859	1719	1813
8.31	80305	89799	65059	82201	89811	80750	83428	89552	78282	86749	69149	86359	84580	79055	80905	82779	79166	86033	79871	85396
8.31	1009	2005	1014	36667	2621	35847	36569	2567	3015	5220	2951	1514	37605	1637	1513	887	2940	38514	35950	37088
8.32	6465	3500	4528	2284	2911	3896	1777	3107	3900	2145	3970	3951	3915	1813			3011	4114	2423	4903
8.84	4283	5307	4266	4305	1028	89	4572	3915	5684	4346	44206	4817	184	19217	492	4541	866	754	300	4339
9.01	6881								7351			7870
9.31		6465	4046	2098	3872	5406	6905	788	3565		7479	4632	7483	3762	1761	1079	5650	6698	15730	3867
9.34	2860	4572	3196	3264	3698	3762	3740	4299	4354	4215	3193	3640	4783	3198	3407	4218	3190	3090	3099	3422
9.51	1942	3498	3687	8800	3921	8994	1715	730	4003	1668	8673	2918	5645	2299	11340	181	329	2315	1856	11199
9.57	5502	10586	9102	4069	8767	16432	15891	10087	9574	2210	15084	8664	11725	4841	1610	11937	3640	7162	20969	12833
9.57	2154	4355	3235	3512	3927	5498	5729	4121	3067	2062	5462	3047	5151	2256	1892	4214	3825	2513	6826	1203
9.57	3280	6916	4023	1403	1028	6490	9363	4720	1263	5252	7182	6828	1028	4262	7804	6943	4794	6282	10347	4833
9.58	2403	3747	2944	3571	3779	5373	5383	4419	2491	712	4449	748	4932	2048	5061	3944	3588	2348	6395	5695
9.68	4232	6944	1823	1737	7404	7712	9359	7709	1648	6181	10150	6067	10221	4274	8564	9108	6075	1203	9600	6210
9.68	15594	24934	18677	14691	23335	28669	31420	2091	1924	2012	5680	20723	35563	14038	2567	28106	19192	21998	4650	20221
9.68	5517	7785	6237	4284	7065	8619	10654	8862	846	7155		6570	10487	4467	9533		6498	6030	11200	6972
9.68	1939	2868	2897	2660	3685	3862	3419	2663	4413	3804	2623	3665	3742	558	2098	4894	1883	2893	3376	4650
9.68	1294	5951	4888	3967	6297	6458	7938	6641	5812	5116	7951	5199	8346	3868	7110	6941	5123	5159	7709	5179
9.69	14536	41778	18596	9432	25934	38429	30220	36896	2715	26178	41830	22430	37122	18649	38860	27761	31301	33392	60960	21452
9.69	5614	12894							6451		14368		12759				10455		22074
9.69	1272	6141	4063	3137	4946	6056	9020	10097	4233	7099	11870	6230	2756	5092	7632	7011	3536	6972	12659	5912
9.70	3640	8206	4774	3037	5721	7864	6555	7829	4843	5895	8029	5489	8032	4300	8910	6743	6733	7642	12132	4727
9.70	3009	4635	3422	2856	3952	4457	777	4911	1220	3581	5497	3747	1268	2777	1463	4853	1349	3888	5384	3539
9.71	1980	4443	2895	4244	2889	3234	7086	4284	4146	3284	4601	3395	1434	1801	6082	4629	3111	2275	6063	4858
9.73	5229	1218	5777	6269	9010	1436	19367	9363	10264	1312	10103	1935	9273	5124	6363	13108	6733	7478	8399	1860
9.75	3188	4302	2957	3479	725	4981	1049	1013	560	4739	1309	8170	4810	412	653	7105	652	7044	1593	4901
9.90	1387	2373	2444	1250	2830	8120	20232	4201	3536	1701	1361	2945	270	423	6959	3126	253	1329	597	10171
9.92	3770	5584	4215	4817	5519	6841	4129	5445	1693	1804	1835	4667	1189	2319	6212	6096	3836	1191	5556	2002
9.92		5371	4167	4688		7819		6548		5138	7373	3681	6776		972				5205	5725
9.92	4377	710	717	4236	7071	842	9191	939	920	5966	7972	6127	8274	956	1916	7355	227	1150	852	5874
9.92	2596	4275	2520	2473	3842	3609	4165	4003	4146	3546	3755	3312	4750	3225	4328	4563	2549	3501	4137	3160
9.93	2306	3283	3093	9735	4558	5915	8009	6303	5371	2636	9213	3784	4825	1576	6308	3403	8785	1903	3342	9364
9.93	1652	1981	11564	945	17021	22634	4442	732	499	2013	1525	1898	20133	11083	17528	18642	1275	1844	15623	1251
9.93	13660	25431	15119	15340	23281	24313	30735	22594	23974	20937	26239	21240	15433	16635	26873	26511	18024	18503	26481	21160
9.94	2614	3788	3393	8863	3970	8816	9924	4942	4316	2460	7123	3478	5307	2858	6286	4366	7923	2021	5979	8854
9.94	8039	1063	11738	3035	13538	32111	40129	1346	14799	3146	2006	1201	1572	8672	1608	1699	1192	1000	546	2193
9.94				2757	3503	3639	3702	3305	3351	3327	3847	3221	3678	3084	3800	3091	2693	3289	3636	3270
9.95	3741	4237	4183	5469	4658	4477	5688	4172	5143	5330	4006	4706	5676	3526	3234	4609	3332	4542	3498	4352
9.96	4168		1330	2579		2869		2696	5012							5532	2548		4616
9.98	1737	17080	13019	2340	20589	4874	29846	22802	2262	13178	25550	12943	25980	10482	1274	19495	15537	1665	1913	2851
9.98	10095	13535	11365	439	17570	1088	883	19810	836	11155	19564	11138	20077	9907	2117	1665	1243	8687	15451	1889
9.98		4112	3526	4432	4599	6304	6186	1483	4152	3273	4646	424	1488	2491	5258	4453	883	2655	4452	7117
9.98	1431	7981	7273	1032	616	821	2138	740	314	6419	9844	1001	11521	1474	9465	984	7509	5121	8521	612
9.99	39581	51513	41050	64293		5707	93569	75132	58113	41397	80820	44837	85837	34317	71201	55789	50220	32330	57863	2010
9.99	4036	4594	4181	5770	5862	6846	6662	6010	5657	3985	7585	4186	6433	3485	5899	5069	4710	3726	4922	6684
9.99	9295	11864	9752	13241	13976	16694	17360	14472	13060	9632	15868	10430	17051	8568	15219	12966	11484	7739	12769	18188
10.04	3195	5179	3618	2167	3937	3948	3477	5053	889	3421	4454	3139	4577	3149	1375	3260	2978	3357	3805	3344
10.05	12929	18749	11766	9475	15683	16301	16617	17465	16883	12805	19333	11012	19197	11241	16788	15713	11703	11829	15203	12730
10.05	1419	749	8330	380	202	10150	10693	1293	1268	9439	11926	8205	1989	1120	12234	12213	7690	8603	10750	1028
10.05	24614	38826	24901	18235	32205	2987	30891	3895	2283	2234	33905	1750	5935	1473	32756	4149	2165	1691	3043	2594
10.05	619	12615	8071	114	10524	548	10520	1221	285	9034	12750	493	1415	7241	1698	1005	982	212	10199	1134
10.06	19947	38492	16847		28488	31800	28809	35913	25333	21754	31759		37316	18335	29599				23283	22749
10.06	3893	6951	3067	3128	5730	6156	4641	6355	4433	3837	5850	3026	6624	3533	5323	5752	3332	3229	4742	4314
10.06							118445	153966				83998	165530				76641		114626
10.06	37402	59147	33766	27243	46090	49978	46654	55751	45510	39436	49490	34428	58696	33811	49552	47565	34449	34289	44379	36430
10.06	15024	57237	254779	19743	15755	60876	403304	25021	13665	26914	22256	28209	39916	252138	445916	62395	18119	24771	62769	12238
10.06	2769	4462	3078		4134	668		4611	4331	3561	4699		4664	3072	4106	4601	2874	3108	766	3562
10.07	2624	34302	17518	12421	24556		22003	31937	20505	26527	33293	2332	26650	3178	42378	26144	28998	32979	37809	23371
10.07	45131	69310	41683	30505	53595	57993	30451	64148	57705	48099	64372	39140	72512	38383	38743	57342	39850	8345	55589	43659
10.07	1469	5668	3219	2112	4164	4527	3987	4942	3448	3928	4253	3607	5684	2921	4556	4081	2948	3600	4612	2748
10.07	1905	4365	1823	1848	1866	17609	4464	3600	3283	15351	23778	3801	21686	2687	4449	3013	4396	3020	6878	2867
10.08	126466	295517	6041	86347	11382	17060	210717	280625	165937	199268	12074	188032	270705	14642	336304	222144	222325	226496	42490	178916
10.08	7134	10428	39366	2160	69077	4548	68036	8397	6451	7030	16011	8022	14758	4728	105293	71673	71708	9820	13980	4000
10.08	13701	26633	13577	9765	21192	22023	20725	25917	17009	20509	26542	19593	25802	17864	30408	21893	22930	26659	32251	18803
10.08	5297	8439	5151	3565	6764	7157	7359	9004	6086	7378	9860	6397	8676	5984	9815	7266	7943	8872	10604	6602
10.08	1432	18095	9863	7369	14190	16027	13975	1430	1623	428	2199	709	2965	2223	976	13769	818	18378	1665	13389
10.09	3439	10325	3379	10334	9484	5324	4266	5801	3949	4747	8366	3552	12179	9061	7648	11026	4340	9018	7347	7384
10.09	2991	20926	2057	3320	25077	4006	17253	1467	20519	1514	16830	20928	2189	20726	4642	693	16660	813	2297	19165
10.10		31240			36174	28496	26543	28626			23624	29955		28990	25085	32060		27144	20354
10.10	3267	3517	2415			3344	2730	2934	469	3610	2411	4159	3710	2644	2888	4039	3186	3267	2022	3406
10.10	1201	371	6354	8968	2513	8073		7192	8378	7931	6415	8616	8070	8574		8329	6804	7349	5468	8118
10.10		3302	2685	3742	4547	5611	14220	4763	5217	3871		5806	3858	2189	2457	553	2121	2560	474	3972
10.10	1963	20455	15485	1247	4216	1117	66382	1142	34338	2187	30255	3359	26358	15915	1231	3673	681	21292	1320	3254
10.10	4105	42979	37860	42462	2500	42104	37863	41793	3122	39021	36567	2962	2039	1286	38236	42392	40367	39337	37997	40099
10.11	847	713	4928	8608	1177	9024	19422	8555	10964	8412	10923	3388	8914	881	8158	12714	9825	3334	745	10479
10.11	59579	72185	57001	72910	81333	68042	60215	67733	68487	67293	54242	74624	71738	67115	59695	75525	60165	59211	49710	64842
10.11	2531	2619	2341		3627	3630	7048	3514	4003	3578	4301	7561	3860	2640	3144	5026	4038	4725		4657
10.12	2501	3805	230	6713	5069	904	6157	1216	5069	2511	7090	96	5179	2853	3660	1395	2428	1870	2638	733
10.12	4979	9673	5288	6111	10050		14578		8164		12251		10985	5818	14274	10396	8860	9519	13581	9647
10.12	2945	3634	3099	4357	5520	4145	298	4562	5720	4523	5085	5794	5229	3032	3382	6193	2956	3850		4909
10.14	1999	3432	1910		3209	3269	6348	3256	3513	2962	389	4004	3653	2309	4382	409	2676	3409	4204	3435
10.18	3228	2090	2555	3956	2126	5538			3674		6272	3095	4960			3622		3584
10.21	2694	1185	2843	2808	3396	3762	3308	3994	3765	2567	4214	3111	4057	2336	2888	3733	786	2281	2440	4064
10.21	6380	9498	7132	1206	1359	9905	636	10199	2038	6479	12231	505	11157	1314	555	1723	5963	626	418	1102
10.29	552	7073	716	374	9483	7785	12549	9212	10651	8071	911	9536	1163	1319	248	10635	147	7574	1035	9849
10.29	12241	12364	12148	11515	11677	11613	11290	11689	10615	11297	10788	11710	11254	10421	11554	11360	507	11794	11776	1344
10.29	6054	604	4951	8696	7581	8874	11382	8280	8680	5943	2342	6917	9016	5548	7416	7720	5196	4539	5324	7458
10.30	39435	10262	19140	42689	43815	15759	62511		52774	38651	18574	41052	55917	8975	35189	44594			33358	49442
10.30	2035	14812	11213	3275	17626	5293	23801	18070	18373	1781	21243	2813	19682	11483	15644	15005	1961	8352	9366	17163
10.30	5148	2981	2595	3113	9064	3934	5797	7643	2891	7351	3561	4903	3162	5665	4521	9028	3628	9117	4632	8969
10.30	14197		13853	17582		20418			24523	19154	23439				20259	24171	16280	19467	11988	24169
10.30	5869	1232	4482	992	5458	1347	11977	381	1359	765	776	5358	8582	4951	6570	2082	3697		597	6887
10.31	4741	4768	3476	5824	6162	6853	8113	6911	5961	5151	6630	5307	6243	4156	5914	6238	3871	3679	3850	5817
10.31	1747	4377	40310	3968	64220	2225	88042	62749	68533	55357		66340	64838	48325	61175	67252	49524	54992	52896	66105
10.31	5577	5763	4540	5771	6983	6368	9485	7191	7596	6194	7532	6645	7827	5474	6533	7343	5335	6021	6122	7595
10.34	4165	4353	1072	13267	714	1170	15825	7570	843	3407	13737	415	907	4231	967	1415	172	510	531	10721
10.34	4265			5385	2973	3057	3766	4833	3873		4371	4912	2550		4211		3017	4907	5418
10.34	19123	12843	17117	9701	20137	17303	8796	22169	18861	22534	5483	19157	23008	17739	9170	24414	9607	19168	7128	8559
10.35	3856	1117	1228	1328	519	1570	16768	664	7925	1114	638	5258	935	4176	6541	6493	5803	2557	1000	1464
10.35	2884	3918	3236	3078	3076	3613	2768	3446	3574	3560	2565	2845	3191	3257	3218	3401	3088	3132	3105	2942
10.35	73903	96893	74881	83184	83175	81787	78268		90213	94728		83439	683	85090	82017	98445	75940	6978	78257	75487
10.35	5947	1692	5162	672	6917	200	747	885	7384	138	673	6840	873	6629	7013	621	960	1264	7066	457
10.35	257	7908	789	1122	1437	7039	7074	8014	7465	442	1553	7262	8363	1649	619	1173	1030	2454	6072	6496
10.35	10880	4217	735	12393	13755	12004	13131	14652	14212	14256	11105	2222	14691	12495	12310	14633	671	13013	10959	1586
10.35		8390	10630					19440	16269	7748	34160	9196	16653	9712	14395		12800		10790	28278
10.35	6491	7103	8857	21335	8999	19172	24777	12402	11517	5513	22060	7772	10540	6960	9209	9226	8122	4106	8986	17314
10.35					3850										3427	2498
10.35	29518	33363	36927	117120	42839	103819	140537	67763	56969	1778	114655	3444	59538	30843	43832	48817	3914	15567	3926	4466
10.35	34245	48998	29351	40103	41848	40984	41075	49866	45003	4815		37839	49267	38709	38398	46294	36320	4644	35619	36686
10.36	3223	3968	2755	4143	3328	3340	3345	3890	3454	3245	2638	3081	3781	3306	3028	3739	2715	3005	2895	2988
10.36	2985	4157	3362	3335	3817	3677	3831	4480	4118	4121	3112	4101	4298	3638	3609	3994	3358	3761	3684	3727
10.36	3812	4441	3527	3911	4263	3951	3373	3705	3981	4418	3045	4437	3863	4023	3578	4383	3856	862	3821	3573
10.36	4038	5538	69414	88872	85667	84629	5056	98761	4900	94832	67276	4809	9040	81206	81047	96788	74787	4739	5970	2904
10.36			124335		174046		159591		178028	12441		158511	197215	153445	160168		146034	163276	142303	156935
10.37	7593	7552	1031	1188	10076	12164	13929	11411	9775	7870	1100	6560	12624	6999	9447	8096	6725	5136	5660	12686
10.37	14731	14663	3587	21150	3648	2956	2916	21259	1559	2186	20720	12835	4896	10940	1896	16888	12321	1826	10261	4261
10.37	24949	23827	22709	37349	29388	33385	41077			3464	34764	23649	35970	22251	28238	27214		1350	17212	38646
10.37	93196	6224	90600	3419	94609	91771	91685	94664	85224	95048	86253	4867	93617	93349	3682	94505	91806	1919	93606	6618
10.37			52890		80220	105060	116520			60755	101052	62178	101442	51260	72141		58593
10.38	4908	1150	4060	5956	5006	5783	1019	5418	5981	4057	6443	840	5476	302	4798	4401	4087	2944	3666	1176
10.38	22179	19102	2359	634	25229	32189	33364	29265	26365	2786	31881	742	1270	1067	25681	3968	19924	13418	1639	31075
10.39	2623	2812	2252	3737	3194	3680	4034	4482	3552	2686	4151	2923	3873	2304	2970	3342	2481	2280	2363	3606
10.39	218681	220155	6642	319575	23581	354125	18019	348651	291943	8778	344476	17441	30136	173882	21696	10642	196143	125018	4760	345377
10.39	33875	32871	29981	45567	39598	49545	53430	45634	41489	30153	48345	30900	43266	28288	36268	35134	30390	20197	25718	49444
10.40	7601	7894	6409	9260	8851	10669	11106	10480	9745	6908	11066	6927	9825	6597	8273	7963	6954	5353	6193	10263
10.40	27563	31572	21985	22121	30151	26229	5749	38931	3586	25644	33236	5996	33402	3536	8382	6017	2675	24131	21516	3655
10.40	5011	6855	4107	4432	7565	6452	7552	8429	7986	6563	7802	5187	7725	5174	6993	6784	4487	4560	4797	5869
10.41	2408	3280	3642	3694	3966	3312	2815	2968	3235	3475	2387	3920	3416	2985	2658	3980	3092	3494	3164	3326
10.41	5582	6014	4973	4586	5785	5983	6107	6606	5963	5665	6672	5019	6640	4769	5872	5833	4759	4558	4514	5555
10.41	3538	5254	3445	3851	5173	2664	5843	1640	1193	4791	1594	2090	2760	3734	5409	4924	4194	1657	3154	5527
10.41	6568	2498	1582	5580	739	1268	1623	985	7832	6483	1242	812	8567	5409	1328	7400	5980	611	1009	1235
10.41	4764	3627	4543	4274	4882	5308	5356	1656	2003	2615	2267	2242	5703	4742	2565	5615	4330	4101	4861	4674
10.41		18516			17263	20307		26827	26837				23533		19376	20705			13315	18449
10.41	116026	139876	90429	95147	138313	131144	143102	165571	141146	119763	143669	109231	163447	102924	138163	137265	105015	103291	100746	126768
10.41							96585	106758	96736	81272	94052	69236		66889		77424			63964
10.41	8134	9947	7113	7243	10313	9808	10391	10967	10372	9102	10562	8728	10876	7485	10133	9535	7487	7403	7408	9452
10.41	6952	8312	6550	5387	1649	8120	8972	2367	1858	7654	1810	6182	1615	6079	8116	9132	5417	1234	6393	1327
10.41	96989	108505	77416	81400	107081	103702	4920	118831	110958	2624	110885	89287	123607	87988	104404	107727	77934	80427	82658	100516
10.41	5010	6750	4728	4738	6187	7252	7634	1514	6594	5642	7113	5662	7669	931	6373	990	1027	5159	1313	6336
10.42	5601	5743	4518	4968	1290	6134	6638	592	2013	5662	7676	5174	7880	5132	1061	6102	4882	4773	5080	4728
10.42	9551	1141	6666	7627	11017	1540	11355	13528	550	8700	11035	8183	12854	7074	338	1033	798	7468	6930	10394
10.42	2628	2269	7747	8833	3840	2109	2595	2587	13095	10440	13604	1741	2446	8947	2379	13451	9065	1849	2829	2855
10.42	68150	6494	49826	55145	85090	77622	4705	99693	85034	71244	93163	61417	100053	2502	79548	79416	58392	56935	9564	77717
10.42	7055	8409			7026	7818	9119	10879	8536		9492		10761			8217	6100	5384	731	5111
10.42														3934	8977				6134
10.42	4955	6426	4269	5272	1483	6302	7058	1405	5785	6238	7735	5853	7350	5253	7727	1308	6609	6529	6107	6763
10.42	964958		735444	784386	1117245	1093232	1153198	1276506	1103861	962006	1209088	866479	1273411	814880	1077582	1103147	827072	791516	774062	1037857
10.42	114747	139989			138553	136137	150508	173274	135556	116595	139019		171329		137639	138759				128330
10.42	1774	3098	26124	4132	984	833	34906	5679	37293	3135		2359	39446	4176	2889	34585	26895	25792	2039	32882
10.42	3475	2066	1071	3500	4662	1210	5496	5281	3835	3808	1729	2502	5508	1940	2931	4505	5277	4972	4672	5592
10.42	1363	20310	14952	2327	20138	2253	1693	3293	1901	17624	3520	472	23004	16672	1711	3896	2911	1935	1618	20102
10.42	6951	7179	5270	5818	7586	7078	816	8120	971	6323	7960	660	8625	5956	543	973	488	160	5537	6846
10.42	1242	4488	3104	3288	4231	4388	1116	5404	3824	3513	4066	3450	3997	3334	4224	4674	2623	3398	3191	3524
10.42	3112	3644	414	2632	3876	3344	3665	3707	4093	3007	4699	2646	3755	2693	3211	3452	2465	2926	2726	3931
10.43	25822	28985	22985	22195	29237	28832	30946	33165	34259	27104	34997	24676	34243	23521	29087	29731	23733	22766	22891	28099
10.43	3528	1668	3209	1890	2482	5656	6148	4224	5016	1935	4082	3530	4339	3343	4236	3930	1722	3341	1641	2341
10.43				249184				440083	378445	308813					347556	370738	266823		249333	345522
10.43	19975	30631	980	15712	29588	26682	1801	36333	27315	28770	40845	3045	35298	27044	5558	3974	4840	2637	31322	2490
10.44	712	127402	64461	3247	6617	3100	132632	158524	104604	8112	6543	3028	10295	3924	175423	10010	5681	158627	2770	131612
10.44	21994	30259	18266	17352	31124	26699	31295	37480	26077	31160	40049	32350	37423	29201	43623	30451	38675	44169	35847	31466
10.44	16465	615	2387	11958	2317	19018	21933	2697	1293	1308	27379	22830	24899	3065	29887	21185	2275	2674	2721	22024
10.44	3544	5665	3172	3333	4709	6041	5537	7404	4874	5100	7845	5726	6709	5034	7899	6037	5180	7114	4433	5889
10.44	18230	20719	192625	182622	374711	18716	33941	29782	19482	29007	504618	9903	38084	327364	29491	31996	13280	27756	17579	7443
10.44	2109	3082	1109	3540	3777	3540	5710	782	3999	766	3651	4944	2785	3012	736	3666	3234	4153	3438	3638
10.45	9785	12868	8686	7986	12443	11771	12700	754	11483	12767	15259	14103	13288	3609	17424	12047	15469	16829		13706
10.45	1835	1892	24990	24101	39942	6709	4042	43585	5698	4886	6351	41339	3162	3232	3212	4314	47301	4588	2955	777
10.45	75	967	4877	4359	7317	6606	1188	8654	6729	7266	1476	7767	7977	752	454	7669	8897	856	2244	721
10.45	2946	3365	2619	2284	4472	4600	3819	3833	4727	3433	4056	3681	5217	3304	4099	3465	3891	4663	3895	3807
10.46	8022	9879	6906	6264	10814	9549	10855	11686	9390	10186	13777	10968	11663	9785	13532	10017	13464	13203	12895	10685
10.56	2704	3119	3061	5472	3384	5240	6007	4361	4385	2112	7158	2744	4137	2725	2678	4329	1888	1718	1581	5620
10.58	1079	1670	6985	12842	10343	2566	1379	2512	1744	6964	17368	9841	12312	738	1178	11730	6493	6588	4969	15338
10.58	2488	2787	2393	3611	3702	3769	4853	3539	3517	2898	4256	3018	3893	2379	4336	3198	2475	2679	3685	3559
10.59	3176	3167	374	4424	4219	4233	4527	4547	4462	2560	5271	3599	4392	2635	3236	3884	2970	2398		4809
10.61	5815	2161	5813	6951	2390	8079	1279	9405	2184	6311	3211	8763	9804	1828	1269	9272	1443	6413	5451	2516
10.65	2473	2603	3052	2372	2778	3240	3152	3105		2531	4726	2800	3530	3068	3662	3381	2492	1605	3377	3097
10.69	15792	3532	10961	19717	19305	11073	14613	12021	16508	5770	14773	6055	14175	15770	17229	26261	18865	5978	12644	16346
10.72	2443		1556	3149	3337	3635		4013	3205	3706	4616	3287	2883	2752		4242	3051	2437		3434
10.74	3530	3784	341	4522	4240	8073	8011	7277	5864	5273	7531	4162	5620	3315	4482	5694	2766	2598	2909	5488
10.77	9117	8189	7365	10664	1349	1080	12534	11246	11283	1464	11176	7703	255	1064	1308	1403	3665	2521	3063	8865
10.77	785	3997	3644	5255	4457	5952	8089	6346	6339	4163	7291	3736	5357	4174	3857	4731	3128	2652	2685	4707
10.77	1751	2523	1210	23823	1624	2513	30523	1988	1117	2821	27857	2870	21781	15427	15392	1855	537	9184	9887	717
10.77	2251	2760	2276	236	12684	3368	26711	4828	17483	1677	1498	2016	15216	10203	10782	3935	1101	6321	5837	1144
10.77	360	5678	942	1236	7688	9112	10075	7948	1350	5246	239	4708	7153	5093	1516	1345	3270	2797	3603	937
10.77	739	10605	1817	3941	1593	2833	50393	2143	893	9474	1604	2000	219	8948	1894	12751	5513	286	2003	2644
10.78	9304	1146	801	1604	579	1865	1263	1255	1097	293	10705	885	11087	7606	806	8702	7605	7049	609	1567
10.78	60316	50054	41329	75104	58829	85193		90672		46639	101972	46648	78820		47666	60575	30932			57727
10.78	3706	3629	2535	4446	3577	5458	8340	5943	4441	3071	3818	3066	4263	3116	2988	4236	2164	2215	2238	3658
10.78	21775	19251	17098	23298	22844	21534	26230	24331	26603	21323	26610	22840	24287	19644	21788	22268	20469	19171	14436	24995
10.78				279265	305087			389933	332812	254701			347482
10.78	5558	689	4675	6486	1885	7171	7883	3071	7346	6050	1268	6655	7723	1265	821	764	5239	5030	3614	1720
10.78	3044	2560	2369	11104	3216	2709	13951	13183	1637	2996	3034	10723	2918	8759	4257	4496	8609	8600	5616	11648
10.78				23018	26906			32383	1987	23287	26748		31098			25114				27543
10.78	5316	4889		909	960	237		514	672	5236	6101	5492	6231	4965	5342	915	4285			6149
10.78	2860	3314	2446	5180	2987	6731	9712	4874	4070	2843	9883	2603	3785	2378	2168	3232	2320	1757	2725	3433
10.78	7898	7346	6286	9543	7635	10285	13586	10628	11238	6971	11958	6158	9124	6704	6644	7546	5169	1070	4568	7355
10.78	2717	8555	43509	12448	4836	11060	8806	9141	6846	4493	1541	63474	76000	4810	4870	64826	53731	50746	33407	3480
10.78	29193	25833	22683	2934	29493	27309		28667	25419	1504	948	24224	1363	23665	24192	1194	19785	18146	18534	29147
10.78	536		8581	10636	10674	11904	12428	11650	11006	9574	11271		10559	10019	8666	10066	9147			10522
10.78	27828	25584	20027	36616	27791	40397	55024	42894	41052	25654	42468	23163	36528	22097	23908	29937	17196	13590	14617	27868
10.79	7260	6666	5268	8028	8223	7681	10428	10168	9178	7949	8069	8190	9382	6606	7487	8107	6950	7026	4739	8860
10.79	5931	4806	3900	309	6648	1655	7968	319	423	6671	2975	7576	1091	1359	199	281	769	7257	707	7284
10.79	106608			110802	113012	104906	148157	147520	125021		125782	105229	131886			110746				127035
10.79	4410	4036	3153	5160	3242	4076	5259	5043	5230	3119	6917	4482	6350	4414	3974	4185	4052	4403	3158	4990
10.79				6829			9481	9279			8296		4307		5677	5174				6111
10.79	80523	68979		4412	91783	2954	97496	4216	97428	2559	87101	82658	94452	72559	2903	6437	71931		51679	4004
10.79	24192	21736		26342	27999	1723	31707	3517	2110	1285	67	27581	2218	23339	1444	1756	23154			28223
10.79	4937	5096	3848	5749	5837	5225	7039	7213	1106	5430	1764	5523	6433	4385	4810	5502	4829	4471	3538	6405
10.79	106409	89730	71213	113466	116961	109420	144259	141176	128097	101980	119574	113039	132171	87514	103620	114236	95330	90775	62037	127744
10.79	2566	4229	42698	75798	3607	73102		93089	83658	4684	77502	73100	89274	59236	69582	8414	64157	59145	38303	3228
10.79	5467	4385	3928	5061	5788	4994	5760	5371	5661	4726	5282	4968	5570	4515	4524	5053	4095	4150	3388	5488
10.79	21436	17350	14752	24198	21880	22357	32776	29872	24685	19124	24606	20544	25750	17558	19845	21300	17306	15311	11353	24461
10.79	5802	5297	4338	6193	5903	5921	6877	7256	7075	5417	6625	5966	6544	5120	5607	5951	5286	4994	4246	6365
10.79	3796	758	3016	4206	581	3847	4486	4720	4611	3666	743	3616	4451	866	3587	3923	3445	3354	2453	550
10.80	20311	21068	14649	5414	24410	19221	29517	28840	21626	22318	30520	31681	26398	25636	14237	20899	35260	35123	20436	29101
10.80	13989	10501	9159	13383	14470	12514	18000	18420	14228	14030	16730	16475	16716	13328	14835	14308	16419	15375	9356	17777
10.80	4851	3768	3330	4913	5794	5060	7049	6539	7057	5030	6396	5294	5923	4028	5026	5098	4659	3855	3110	5818
10.80	5550	569	4037	1113	6128	6259	8726	8128	6372	1816	7535	110	7469	299	6221	5883	5661	6582	5187	430
10.81	9655	1709	1583	8450	2066	3938	12196	12532	2268	11234	5174	1451	11976	11167	3304	816	15083	15097	2010	2642
10.81		10651					15855	20154		1199			19932			15749				23371
10.81	4262	3763	3801	2083	4428	2344	3055	5416	2545	2781	5160	4972	2821	4474	4802	4370	3336	3382	2457	5100
10.81	25040	25038	20326	6179	7312	7531	38787	37037	5083	7218	10764	8129	36934	6576	8003	6494	43575	5211	27474	7541
10.81	25569			26810	450	26492	24844	26033	25747	27441	22197	26301	1582	23921	25330	24448	23270	25880	21367	25881
10.82	2160	874	1805	3514	23267	4004	14293	1315	20984	4438	2304	21527	2234	1983	2163	3659	1841	16924	16372	17090
10.82	93358	50820	67275	86038	114347	19987	139850	137413	36021	112923	143873	138403	124488	107929	41392	21118	57510	55142	90398	48967
10.82	1256	807	4965	5373	7170	6926	9898	8738	6804	7566	10083	8891	8125	6592	404	8090	9512	9593	862	8368
10.82	6214	6196	5257	6133	6944	6649	8727	8603	7084	7193	10716	9054	7492	7614	9555	6968	10774	10145	6913	8549
10.82	591	1175	3647	1198	5283	4618	6333	699	4851	526	1534	7027	5336	5738	6613	1285	7442	7534	5283	6320
10.82	91346	98843	82756	100341	108554	99218	96011	102848	100061	104012	83483	105400	104508	91870	95027	101748	93535	95828	88452	99315
10.82	7273	949	6556	8477	262	801	6599	1688	2233	1584	5778	7706	9773	7676	1277	1810	1640	1783	1506	6300
10.82	29491	28086	21201	26561	35810	29688	39598	41295	32094	36124	43316	44044	37579	32883	40979	34219	47976	47594	30460	41587
10.82	7365	5776	3327	3708	7492	8216	10396	10953	8394	3569	8445	6377	6130	8331	5264	3237	10353	7965	5541	10728
10.83	157508	185955	142960	195625	227962	185988	156875	184548	195847	214403	131208	197257	205431	178909	170664	194040	163850	167491	157289	170537
10.83	45220	54232	36817	56326		53910			58298	61259	37199	55841		51951	47246	55978	47236	47372	45626	51436
10.83	11990	2150	10294	11676	16741	1318	20256	19949	13762	17010	20421	20695	17097	15278	23275	629	221	2273	16837	17486
10.83	8808	9741	593	2018	10972	10733	7630	9536	863	2401	983	11469	9693	1503	1583	9534	8458	8595	797	1100
10.83	14022	11723	16541	5829	15789	9142	31400	33379	14983	13544	36057	33554	28248	14888	9013	15817	35256	23938	11348	19780
10.83	4618	4686	4199	5229	6368	4721	3929	5334	5797	6171	4046	5600	5482	5016	4780	5187	4508	4922	4662	4838
10.83	77001	83898	75460	82839	86627	80175	75898	81380	77149	84776	68149	83683	81962	79460	78364	81331	78496	79917	77066	80884
10.87	4006				3802	3513	2876	3342	2832	2826		3274		3438	3131	3501			3170	3208
10.97	3934	4301	4325	761	1030	5798	600	7032	6208	4800	1680	6604	1615	4507	4580	1418	4171	578	1092	7825
11.16	3041	2757	247	4439	3353	480	9549	5847	312	443	9728	3269	4208	2881	1027	4048	1959	1537	2181	546
11.16	11398	12382			13118		53684		21687	12155	61725	13504		11744	8717		7137		9252
11.17	5315	4576	4280	2251	5775	2355	5674	8607	6899	6726	4839	2510	2954	5423	5307	7239	1755	2290	2016	3663
11.17	4545	4481	4258	6369	4712	7967	14276	8006	6992	4765	14594	4883	6412	3914	3470	6048	2897	2173	3773	6119
11.17	18071	17626	14293	21309	22357	25301	55870	3682	959	2261	7734	3389	1688	19976	1678	3956	20461	2904	1161	3561
11.30	1972	3162	2827	321	1312	3801	3760	3602	3966	3539	3223	3496	4293	2900	3406	4791	2543	2374	2284	3403
12.32			4975	4473									5046
12.42			4342	3641	6490			3539						3515					3828	3201
2.01	7367	8685	5521	8888	7894	8631	8390	9735	9268	8285	9201	7825	9079	7355	6871	9736	6620	7098	7650	8241
1.46	7165	8116	4523	7507	7367	7176	7148	8773	8526	7147	9038	8381	7121	7079	6669	6666	6522	7729	6737	7126
4.79	10781	13332	11263	15087	10713	15446	16384	13741	20666	11126	12972	11972	17450	13389	12931	11884	11057	9104	12875	13758
5.46	21078	22931	16453	24802	26350	23493	23653	24236	26446	22436	21353	22354	25576	20052	20974	22029	19412	19123	17499	23379
4.81	2568	4077	4096	5831	4970	7033	8373	4138	10109	5833	4475	2631	4292	2193	3554	7938	3308	5555	5108	6775
4.81	7953	10615	9614	12861	12913	15539	16549	9356	23463	15853	11093	16372	14102	8569	8345	21529	8358	17565	12254	19679
4.70	2656	4143	2789	4029	4557	4949	936	3490	6282	4343	4266	4691	5081	3390	2963	6338	3252	4009	3649	5315
5.34	26536	35174	25043	34374	38382	36710	34532	33510	43471	29412	28881	30204	38693	24462	28099	34432	24332	813	20715	34389
4.65	4433	11341	4668	6351	5522	4169	7835	7609	9197	6378	6499	6406	7504	6723	5532	6186	4823	5608	7016	5168
5.02	7600	9897	7403	7934	11020	7983	9037	8422	9699	10474	9046	10995	9724	9754	12061	10973	11315	2499	10435	8899
5.12		5814	794	7183	351	7849	9510	5739	13558	7672	6533	2262	7650	4944	4391	11711	3997	6565	6662	727
4.68	2138	3026	2093	3720	2951	3479	4493	3338	4187	2643	3642	2848	4165	3068	2599	3055	2389	2384	2400	3366
4.78		4448	3279		3688	5588	4580		5095	4430	4919	4198	4803	4156	3554	4431		2820	4026	4888
4.82	2887	5544	2247	3484	2892	3376	3565	3813	3847	4258	4387	4470	3291	3152	3147	3498	3106	2903	2529	3079
5.92	6044	8636	4084	6498	5725	5785	5814	7374	7080	6428	6533	6612	6339	5674	5767	5708	5417	5184	4632	5209
5.61	9038	10545	6525	9266	9089	9182	9077	9763	11003	687	638	8868	9776	8504	9158	1217	8057	7776	6330	1426
4.98	14789	19712	11205	16932	15450	15995	17956	17549	16849	20177	17264	16689	18320	16476	15018	21260	14665	13062	12170	15179
4.98		7733	4526	7169	6541	7076	7460	6675	7847	6123	6925		8014	6850	5072	7541	6428	6672	6513	6709
4.80	7452	593	5367	8534	9316	8553	5886	9371	10461	8348	1288	678	2002		6272	7982			1667	6979
10.30	9102	10532	7623	13139	10993	18545	18779	14705	13700	9973	15549	8482	14205	7659	10016	11659	5319	4553	6975	10565
9.29					3549	4025	5714	4424	2923	2887	4376	3614	5666	2307				3224	6607	1744
9.25	2373	4314	3335	2405	3886	4231	1907	4105	1549	3168	1889	1883	2579	2149	5926	4111	4049	4225	7083	3981
10.10	4288	4722	3947	5603	6506	8183	21547	7101	8600	6252	7517	8496	6309	3374	3498	9803	3106	3172	625	6704
10.09	1759	2518	2038	2587	3318	3066	6477	2665	3337	2627	3839	4107	3354	1995	2773	3714	1715	3067	2529	3766
10.47	6440	1288	6262	6473	10835	11412	1736	13082	2480	9553	15351	10905	13269	1190	16904	10521	10805	11150	13295	11354
10.59	1262	943	6891	10699	10327	11922	14172	10536	9668	730	12924	1917	11099	6503	1361	1981	1108	6942	8224	11839
10.43	2828	3710	3071	5234	4633	4879	7859	4468	977	4420	1457	5221	3988	3568	3900	4905	3876	4090	4508	5370
9.94	2063	3709	591	2366	4019	4137	6262	3458	3955	3662	4311	4763	4173	2448	4502	4628	3036	4299	5720	4195
"
twoway = FALSE
factor_order1 = NULL
factor_order2 = NULL
legend_position = 'topleft'
draw_single = T
library(pacman)
pacman::p_load(data.table,parallel, ez, userfriendlyscience,dendextend,
colorspace,gplots,stringr)
data. = WCMC.Fansly::MetaboAnalystFormat(input,row_start = ifelse(twoway,3,2))
e = data.$e
f = data.$f
p = data.$p
if(twoway){
p = p[,c(2,3)] # this makes the group1 the first column and the group2 2nd column.
}else{
p = p[2]
}
# e = fread("e.csv")[,-1]
# f = fread("f.csv")[,-1]
# p = fread("p.csv")[,-1]
e = as.matrix(e)
if(twoway){
xlab = paste0(colnames(p)[1], " * " ,colnames(p)[2])
}else{
xlab = colnames(p)[1]
}
if(is.null(factor_order1)||is.na(factor_order1)){
factor_order1 = unique(p[[1]])
=======
text(x = text.pos.x, par("usr")[3]-0.1, labels = factor_order2, srt = 0, pos = 1, xpd = TRUE,cex=2)
if(!legend_position=='none'){
legend(legend_position,
c("RT-22C","TN-30C"), fill=c('blue','green'))
}
boxplot(value~group1*group2,data = data,notch=FALSE,col=c('blue','green'),
xaxt="n",at = at.x, cex.axis=2)
if(jitter){
stripchart(value ~ group1*group2, vertical = TRUE, data = data,
method = "jitter", add = TRUE, pch = 20, col = 'black',at=at.x)
}
title(main=f$`compound label`[j], xlab=xlab, ylab='intensity',cex.lab=2, cex.main=4, cex.sub=2)
axis(1,at = text.pos.x, labels = F)# x axis
text(x = text.pos.x, par("usr")[3]-0.1, labels = factor_order2, srt = 0, pos = 1, xpd = TRUE,cex=2)
if(!legend_position=='none'){
legend(legend_position,
c("RT-22C","TN-30C"), fill=c('blue','green'))
}
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
purl <- "http://wcmc-da.fiehnlab.ucdavis.edu/ocpu/library/utils/R/install.packages"
library(RCurl)
library(jsonlite)
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.Boxplot_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Course2017.STAT_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Course2017.STAT_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.Boxplot_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.Boxplot_0.1.0.tar.gz")))
input = "time	0h	0h	0h	0h	0h	0h	0h	0h	0h	4h	4h	4h	4h	4h	4h	4h	4h	12h	12h	12h	12h	12h	12h	12h	12h	12h	24h	24h	24h	24h	24h	24h	24h	24h
treatment	RT	RT	RT	RT	C	C	C	C	C	RT	RT	RT	RT	C	C	C	C	RT	RT	RT	RT	RT	C	C	C	C	RT	RT	RT	RT	C	C	C	C
label	RT 0HR 1_001	RT 0HR 2_002	RT 0HR 3_003	RT 0HR 4_004	30 C 0HR 1_005	30 C 0HR 2_006	30 C 0HR 3_007	30 C OHR 4_008	30 C OHR 5_009	RT 4HR 1_010	RT 4HR 2_011	RT 4HR 3_012	RT 4HR 4_013	30 C 4 HR 4_017	30 C 4HR 1_014	30 C 4HR 2_015	30 C 4HR 3_016	RT 12 HR 1_018	RT 12 HR 2_019	RT 12 HR 3_020	RT 12 HR 4_021	RT 12 HR 5_022	30 C 12 HR 1_023	30 C 12 HR 2_024	30 C 12 HR 3_025	30 C 12 HR 4_026	RT 24 HR 3_029	RT 24 HR 4_030	RT 24HR 1_027	RT 24HR 2_028	30 C 24HR 1_031	30 C 24HR 2_032	30 C 24HR 3_033	30 C 24HR 4_034
zymosterol	0.999656571	0.620669745	0.042033185	0.938200104	0.364555686	0.022094132	0.899561049	0.601323751	0.269048459	0.430607445	0.281390878	0.018184994	0.056198123	0.721991609	0.299353872	0.157902847	0.076582137	0.883938987	0.403119302	0.489876309	0.579933031	0.269613006	0.978192253	0.342081686	0.502940645	0.543637841	0.654142985	0.514797102	0.787714383	0.687676286	0.117570324	0.818744361	0.425593652	0.673911662
xylulose NIST	0.732645723	0.986768882	0.238639446	0.425466437	0.459812771	0.510113528	0.040759082	0.15282482	0.79240713	0.140330158	0.464890847	0.119817075	0.560043666	0.68190572	0.518171712	0.085963642	0.0268425	0.216047013	0.797857076	0.040605345	0.492281562	0.28886229	0.637243018	0.215034337	0.722947322	0.053456215	0.907145412	0.35037957	0.538241752	0.319263925	0.525374728	0.21358433	0.46227667	0.220319379
xylose	0.26352052	0.942575923	0.988423759	0.753075383	0.869738647	0.883059393	0.114105147	0.885474184	0.54609541	0.414444438	0.026683794	0.284081855	0.749789044	0.637771089	0.981843795	0.153670184	0.802832258	0.631145816	0.181149136	0.333006174	0.559257764	0.491738614	0.708325987	0.018029116	0.654235834	0.590666317	0.194882513	0.399745469	0.467271968	0.06292479	0.08943975	0.334496999	0.529739529	0.260752517
xylonic acid isomer	0.215879443	0.818752195	0.990063306	0.161058368	0.664120762	0.906621962	0.426597477	0.505981663	0.240523164	0.819625729	0.639061992	0.019496628	0.778408645	0.174013694	0.499871465	0.259420245	0.332042252	0.07225088	0.861875632	0.783765179	0.738158546	0.051681875	0.324122245	0.051280167	0.545693409	0.961003127	0.750789951	0.348166105	0.40906945	0.156716222	0.986635382	0.262447295	0.501521514	0.260489472
xylitol	0.814315932	0.529301214	0.198827546	0.613641888	0.580764507	0.287300708	0.774655344	0.157529493	0.618651613	0.668744191	0.708744485	0.135772717	0.865192256	0.200409791	0.848062591	0.285140628	0.126522047	0.79838088	0.429144251	0.641001662	0.9160487	0.672768096	0.384828244	0.163733752	0.313000745	0.92751138	0.05061115	0.308641063	0.158629668	0.091926624	0.137222722	0.230323954	0.421767949	0.42613246
valine	0.259578332	0.059606018	0.022877696	0.074317422	0.039327767	0.352005366	0.752577197	0.403352858	0.24804868	0.636467316	0.72293114	0.400086908	0.591751939	0.806807175	0.154469671	0.092851812	0.968932546	0.849495596	0.582805872	0.950094208	0.82324416	0.474994146	0.865497101	0.66593146	0.760898301	0.195433538	0.013495526	0.304782179	0.945686782	0.986724829	0.134241638	0.584127937	0.621883843	0.184467415
uric acid	0.710217089	0.633512746	0.04368992	0.99808341	0.786425237	0.957290713	0.657421579	0.567053705	0.247838205	0.846441623	0.003165387	0.89078735	0.676400097	0.67906538	0.41700288	0.106143974	0.662703221	0.442499641	0.206791838	0.823211814	0.819418398	0.147779495	0.986526529	0.755439358	0.946864392	0.771909513	0.39969164	0.074561407	0.44525885	0.804695688	0.212885736	0.971778087	0.746255299	0.849149645
urea	0.543536396	0.64248393	0.730906899	0.120112292	0.853488584	0.493183762	0.951596979	0.581468806	0.164308123	0.772730898	0.765461679	0.358624828	0.535863677	0.922578732	0.987005476	0.299794997	0.833704228	0.525494462	0.440147112	0.56673689	0.813282411	0.144462693	0.353096042	0.918996867	0.3635788	0.307800921	0.823261591	0.001751549	0.990127521	0.156966283	0.743763624	0.129587949	0.983910296	0.541354642
uracil	0.635863607	0.613166957	0.076396198	0.954930564	0.855238002	0.861646381	0.078298979	0.558486852	0.131628456	0.322594782	0.221319296	0.838912461	0.346288722	0.720009144	0.383401171	0.066295075	0.501687158	0.908665779	0.059432552	0.900360864	0.013667364	0.535291883	0.255016433	0.005649655	0.412505564	0.636728815	0.854868018	0.314787774	0.660710667	0.866666153	0.179953995	0.324747411	0.381810812	0.006830827
UDP-glucuronic acid	0.496925494	0.144791498	0.20230271	0.398439629	0.294203787	0.870692556	0.747009998	0.97551203	0.923886455	0.211560854	0.804365931	0.3642905	0.77682009	0.499157584	0.174044738	0.956464338	0.329185886	0.534053706	0.678977698	0.173629261	0.344305312	0.163252736	0.227210939	0.378241992	0.101154387	0.147990051	0.700014323	0.109593472	0.633465991	0.192212503	0.997579871	0.993077699	0.892744382	0.312175586
tyrosine	0.957567053	0.623194628	0.525971884	0.65402356	0.985050525	0.491073576	0.254747906	0.153153524	0.705935257	0.993713974	0.265693267	0.935951906	0.258944261	0.305435104	0.283360395	0.263770171	0.016541809	0.855960752	0.93658413	0.366642927	0.243368441	0.091787352	0.226512694	0.229677677	0.149613574	0.752413629	0.535376134	0.398467697	0.61969596	0.289017592	0.756082506	0.698390683	0.95834437	0.035256162
tryptophan	0.977842803	0.716847165	0.833785115	0.355767805	0.735791397	0.743684324	0.687091858	0.654988231	0.617736175	0.597052399	0.680725894	0.022081347	0.988042454	0.261061305	0.933819763	0.892608753	0.127555162	0.911434701	0.490707606	0.650869187	0.861839043	0.792578846	0.53675091	0.668527799	0.604381245	0.187136969	0.028846064	0.675498749	0.317933794	0.763792815	0.381405003	0.804107036	0.722599233	0.017230816
trans-4-hydroxyproline	0.358020263	0.190635688	0.792797554	0.511598206	0.758569028	0.667355477	0.984268457	0.199330297	0.691748738	0.276531181	0.856018209	0.215885018	0.287478873	0.334474015	0.707886054	0.591426223	0.343179925	0.038015753	0.3988974	0.915719258	0.838756252	0.448935034	0.133003743	0.070941701	0.953817001	0.199121192	0.251731315	0.198427299	0.317465798	0.998997046	0.799196004	0.351165018	0.405352016	0.894785668
tocopherol alpha-	0.781825928	0.662564007	0.709887158	0.997540875	0.813870063	0.623170037	0.17864131	0.578352049	0.634385308	0.720647495	0.960482968	0.45066008	0.832747888	0.46593925	0.678022146	0.781870924	0.545831998	0.935881009	0.615965273	0.151437555	0.900359897	0.527204861	0.067439826	0.143293245	0.595784633	0.835442351	0.385471394	0.346166886	0.648896743	0.471348148	0.146902872	0.18244787	0.654743894	0.425766452
thymine	0.77806944	0.046525237	0.003237692	0.3014965	0.384838284	0.016972094	0.127440051	0.20399132	0.719904801	0.279000438	0.98290274	0.822478592	0.288962187	0.211704473	0.760778482	0.995970275	0.660143361	0.392189215	0.561068314	0.532074807	0.775218296	0.566554986	0.026394721	0.9505675	0.732320738	0.969379199	0.169982553	0.693400597	0.036753712	0.479082625	0.690394838	0.639074379	0.311086257	0.767502141
thymidine	0.472042078	0.317967022	0.526333267	0.793456249	0.200596702	0.47798165	0.229552878	0.832439244	0.611709539	0.937135185	0.685418999	0.317404546	0.595006895	0.989303083	0.284911745	0.885713655	0.680295272	0.825689718	0.033114346	0.401401123	0.662481733	0.645636577	0.112763702	0.861335756	0.85788018	0.290382591	0.404696554	0.628690764	0.392483593	0.736011073	0.462741829	0.720825738	0.580123415	0.768476772
threonine	0.701156054	0.865051497	0.758633793	0.199392199	0.198748776	0.722671328	0.049210613	0.333143902	0.845099115	0.286706443	0.257842647	0.517929416	0.186098554	0.755366985	0.717698329	0.348183295	0.43768767	0.646124132	0.26105961	0.453915899	0.430781696	0.787172977	0.432149905	0.522933664	0.284008086	0.965738226	0.306718037	0.523857727	0.372535878	0.206162502	0.711080904	0.193243239	0.515003055	0.817013899
threonic acid	0.460010396	0.785245828	0.624500622	0.328501599	0.556736448	0.625503521	0.957573102	0.665387459	0.809755063	0.227605379	0.109709549	0.606626736	0.740944641	0.649294181	0.927663647	0.021507947	0.955809453	0.857542875	0.543258386	0.581458235	0.614489321	0.302187411	0.256829081	0.249122911	0.60176433	0.173536255	0.919885273	0.00727801	0.394718441	0.188575495	0.466014909	0.638921117	0.277815215	0.485632402
taurine	0.385179113	0.174006253	0.340229211	0.983210302	0.339194726	0.263329265	0.606242026	0.641392166	0.377935163	0.764201702	0.422602821	0.419251103	0.826385342	0.146457424	0.56905593	0.208436019	0.983875735	0.246590785	0.469597308	0.817052094	0.27743692	0.423127412	0.479459323	0.443903283	0.731748608	0.39898197	0.617445717	0.191314355	0.810444591	0.697394329	0.879783033	0.912796486	0.772217933	0.11173618
sulfuric acid	0.59133311	0.60040805	0.75241035	0.330776674	0.64755402	0.174934718	0.273069379	0.892916269	0.245812628	0.889233344	0.562860465	0.761578248	0.371535865	0.471729894	0.628369984	0.620548961	0.651256326	0.69177252	0.419916643	0.688125943	0.120943586	0.980905044	0.744370839	0.909287	0.698353563	0.257317365	0.114367312	0.632194538	0.408225701	0.150196703	0.091627834	0.269736814	0.339125675	0.599428049"
twoway = TRUE
factor_order1 = NULL
factor_order2 = NULL
legend_position = 'topleft'
draw_single = T
compoundName = 'zymosterol'
jitter = TRUE
library(pacman)
pacman::p_load(data.table,parallel, ez, userfriendlyscience,dendextend,
colorspace,gplots,stringr)
data. = WCMC.Fansly::MetaboAnalystFormat(input,row_start = ifelse(twoway,3,2))
e = data.$e
f = data.$f
p = data.$p
if(twoway){
p = p[,c(2,3)] # this makes the group1 the first column and the group2 2nd column.
>>>>>>> ef8a0242c895e85620e95e2a0bffa9835aa638ba
}else{
p = p[2]
}
<<<<<<< HEAD
at.x = at.x[!is.na(at.x)]
text.pos.x = 1:length(factor_order1)
index=which(gsub(" ", "", f$`compound label`, fixed = TRUE)%in%gsub(" ", "", compoundName, fixed = TRUE))[1]
oo = index
index
f$`compound label`
index=which(gsub(" ", "", f$`compound label`, fixed = TRUE)%in%gsub(" ", "", compoundName, fixed = TRUE))[1]
f$`compound label`[1]
compoundName = "X1_CE..22.1..iSTD"
index=which(gsub(" ", "", f$`compound label`, fixed = TRUE)%in%gsub(" ", "", compoundName, fixed = TRUE))[1]
oo = index
j = index
data = data.frame(value = e[j,],group1 = factor(p[[1]],levels = factor_order1))
boxplot(value~group1,data = data,notch=FALSE,col=terrain.colors(length(factor_order1)),
xaxt="n")
if(jitter){
stripchart(value ~ group1, vertical = TRUE, data = data,
method = "jitter", add = TRUE, pch = 20, col = 'black',at=at.x)
}
title(main=f$`compound label`[j], sub=paste0("compound #: ", j),
xlab=xlab, ylab='intensity')
axis(1,at = 1:length(factor_order1), labels = F)# x axis
text(x = 1:length(factor_order1), par("usr")[3]-0.1, labels = factor_order1, srt = 0, pos = 1, xpd = TRUE)
legend(legend_position,
factor_order1, fill=terrain.colors(length(factor_order1)))
library(WCMC.Stat.Boxplot)
purl <- "http://wcmc-da.fiehnlab.ucdavis.edu/ocpu/library/utils/R/install.packages"
library(RCurl)
library(jsonlite)
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.Boxplot_0.1.0.tar.gz")))
draw_single = F
library(pacman)
pacman::p_load(data.table,parallel, ez, userfriendlyscience,dendextend,
colorspace,gplots,stringr)
data. = WCMC.Fansly::MetaboAnalystFormat(input,row_start = ifelse(twoway,3,2))
e = data.$e
f = data.$f
p = data.$p
if(twoway){
p = p[,c(2,3)] # this makes the group1 the first column and the group2 2nd column.
=======
e = as.matrix(e)
e = t(apply(e,1,function(x){
x[is.na(x)] = 0.5*min(x,na.rm = T)
return(x)
}))
if(twoway){
xlab = paste0(colnames(p)[1], " * " ,colnames(p)[2])
}else{
xlab = colnames(p)[1]
}
if(is.null(factor_order1)||is.na(factor_order1)){
factor_order1 = unique(p[[1]])
}else{
factor_order1 = strsplit(factor_order1, ",")[[1]]
}
if(is.null(factor_order2)||is.na(factor_order2)){
factor_order2 = unique(p[[2]])
>>>>>>> ef8a0242c895e85620e95e2a0bffa9835aa638ba
}else{
p = p[2]
}
# e = fread("e.csv")[,-1]
# f = fread("f.csv")[,-1]
# p = fread("p.csv")[,-1]
e = as.matrix(e)
e = t(apply(e,1,function(x){
x[is.na(x)] = 0.5*min(x,na.rm = T)
return(x)
}))
if(twoway){
xlab = paste0(colnames(p)[1], " * " ,colnames(p)[2])
}else{
<<<<<<< HEAD
xlab = colnames(p)[1]
}
twoway
factor_order1 = NULL
=======
index=1:nrow(f)
oo=1
}
j = 1
data = data.frame(value = e[j,],group1 = factor(p[[1]],levels = factor_order1), group2 = factor(p[[2]],levels = factor_order2))
boxplot(value~group1*group2,data = data,notch=FALSE,col=terrain.colors(length(factor_order1)),
xaxt="n",at = at.x)
title(main=f$`compound label`[j], sub=paste0("compound #: ", j),
xlab=xlab, ylab='intensity')
axis(1,at = text.pos.x, labels = F)# x axis
text(x = text.pos.x, par("usr")[3]-0.1, labels = factor_order2, srt = 0, pos = 1, xpd = TRUE)
if(!legend_position=='none'){
legend(legend_position,
factor_order1, fill=terrain.colors(length(factor_order1)))
}
terrain.colors(length(factor_order1))
?terrain.colors
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
terrain.colors(length(factor_order1))
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
dev.off()
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
purl <- "http://wcmc-da.fiehnlab.ucdavis.edu/ocpu/library/utils/R/install.packages"
library(RCurl)
library(jsonlite)
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/barupal/ChemRICH/raw/master/ChemRICH_1.0.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Course2017.STAT_0.1.0.tar.gz")))
install.packages("C:/Users/fansi/Downloads/ChemRICH_1.0.0.tar.gz", repos = NULL, type = "source")
find.package("rJava")
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Course2017.STAT_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("https://github.com/barupal/ChemRICH/raw/master/ChemRICH_1.0.0.tar.gz", repos = NULL, type = "source")
install.packages("https://github.com/barupal/ChemRICH/raw/master/ChemRICH_1.0.0.tar.gz", repos = NULL, type = "source")
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/barupal/ChemRICH/raw/master/ChemRICH_1.0.0.tar.gz")))
isntall.p
install.packages("rJava")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
colors
terrain.colors(length(unique(p[[1]])))
?terrain.colors
col2rgb("#00A600FF")
colors = terrain.colors(length(unique(p[[1]])))
substring(colors,1,7)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
colors
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
>>>>>>> ef8a0242c895e85620e95e2a0bffa9835aa638ba
library(pacman)
pacman::p_load(data.table,parallel, ez, userfriendlyscience,dendextend,
colorspace,gplots,stringr)
data. = WCMC.Fansly::MetaboAnalystFormat(input,row_start = ifelse(twoway,3,2))
e = data.$e
f = data.$f
p = data.$p
p = p[,c(2,3)] # this makes the group1 the first column and the group2 2nd column.
e = as.matrix(e)
if(twoway){
xlab = paste0(colnames(p)[1], " * " ,colnames(p)[2])
}else{
xlab = colnames(p)[1]
}
<<<<<<< HEAD
# e = fread("e.csv")[,-1]
# f = fread("f.csv")[,-1]
# p = fread("p.csv")[,-1]
e = as.matrix(e)
e = t(apply(e,1,function(x){
x[is.na(x)] = 0.5*min(x,na.rm = T)
return(x)
}))
=======
input = "treatment	RT	RT	RT	RT	C	C	C	C	C	RT	RT	RT	RT	C	C	C	C	RT	RT	RT	RT	RT	C	C	C	C	RT	RT	RT	RT	C	C	C	C
label	RT 0HR 1_001	RT 0HR 2_002	RT 0HR 3_003	RT 0HR 4_004	30 C 0HR 1_005	30 C 0HR 2_006	30 C 0HR 3_007	30 C OHR 4_008	30 C OHR 5_009	RT 4HR 1_010	RT 4HR 2_011	RT 4HR 3_012	RT 4HR 4_013	30 C 4 HR 4_017	30 C 4HR 1_014	30 C 4HR 2_015	30 C 4HR 3_016	RT 12 HR 1_018	RT 12 HR 2_019	RT 12 HR 3_020	RT 12 HR 4_021	RT 12 HR 5_022	30 C 12 HR 1_023	30 C 12 HR 2_024	30 C 12 HR 3_025	30 C 12 HR 4_026	RT 24 HR 3_029	RT 24 HR 4_030	RT 24HR 1_027	RT 24HR 2_028	30 C 24HR 1_031	30 C 24HR 2_032	30 C 24HR 3_033	30 C 24HR 4_034
zymosterol	0.072624157	0.522130695	0.610371889	0.515466528	0.741237921	0.950946558	0.795490033	0.392803108	0.727607684	0.657143706	0.23061301	0.996036917	0.085744999	0.16638601	0.24941174	0.458768389	0.693203988	0.351469888	0.806538656	0.602612982	0.519948688	0.731015426	0.365643449	0.24665442	0.650700619	0.26088001	0.850988197	0.035388328	0.005177232	0.830364892	0.328084542	0.972050221	0.827189089	0.358998227
xylulose NIST	0.963033575	0.993545901	0.401104873	0.251816768	0.731969403	0.698835231	0.050248175	0.546405167	0.373827269	0.290950143	0.58884033	0.849164816	0.710544519	0.909175292	0.803390552	0.273921016	0.361825063	0.254686551	0.562455104	0.223948046	0.268209663	0.03391265	0.764728962	0.887369424	0.339625949	0.440682095	0.647746353	0.159930774	0.275991081	0.687209828	0.975917144	0.844981502	0.183999946	0.231836265
xylose	0.494628857	0.755879999	0.003923013	0.15904817	0.717131505	0.199652125	0.687864754	0.401209954	0.829458722	0.923757236	0.315538847	0.486160216	0.214116057	0.449991721	0.853268557	0.464292535	0.656551288	0.138873338	0.40574902	0.718421859	0.793116418	0.120480486	0.322691333	0.973689422	0.715156639	0.195294909	0.83010301	0.747198338	0.207131684	0.736414214	0.900771445	0.290919704	0.999144643	0.745250874
xylonic acid isomer	0.515624483	0.930483583	0.720851042	0.891048111	0.153720087	0.660186327	0.257467629	0.513631792	0.407297214	0.281874728	0.037264964	0.137202955	0.305351155	0.969719441	0.088803689	0.79808289	0.564120593	0.230024705	0.208208044	0.773173568	0.032366661	0.249633647	0.685790778	0.697601973	0.253814178	0.214394187	0.46764317	0.877515787	0.122609287	0.806805614	0.861461845	0.119058041	0.354025696	0.839769367
xylitol	0.256406837	0.117367705	0.478212991	0.364938569	0.276384134	0.57260728	0.66023136	0.923000772	0.928152536	0.418441977	0.741226596	0.632087493	0.780341319	0.338624186	0.784599016	0.461375789	0.830442802	0.170247346	0.122240611	0.857790374	0.858533156	0.324846861	0.745186936	0.747592585	0.520929199	0.680620763	0.58350684	0.314066538	0.81286517	0.522170698	0.629113181	0.091182572	0.969486308	0.459504988
valine	0.088685482	0.464784901	0.735598053	0.943298938	0.689653622	0.054655608	0.029730838	0.104576759	0.99432536	0.855235485	0.675578491	0.901184635	0.917979816	0.38234019	0.936796364	0.990367798	0.952477637	0.215499552	0.045066801	0.711976029	0.127775129	0.286145194	0.918248424	0.905404286	0.089890439	0.971494853	0.384436214	0.988066852	0.628646483	0.226968853	0.374770784	0.736935619	0.043842775	0.197084632
uric acid	0.878790448	0.552074995	0.957415587	0.079395291	0.054122238	0.605017521	0.063162933	0.464398818	0.567391482	0.777992633	0.943377377	0.271574685	0.55913145	0.246098702	0.777379214	0.964030404	0.898330708	0.686945939	0.695646594	0.104636135	0.438470031	0.647668284	0.30303019	0.086147214	0.984773645	0.104480699	0.183386946	0.870907502	0.450083932	0.029148615	0.359763587	0.238266178	0.981431146	0.585540439
urea	0.199490693	0.077665015	0.473773366	0.435867678	0.480624164	0.773570088	0.812180115	0.616230953	0.922140833	0.381404007	0.393660213	0.0271887	0.351774202	0.465551679	0.104517231	0.253371876	0.990708581	0.03826951	0.83123641	0.984284696	0.637782586	0.65079026	0.612407252	0.46145254	0.881978827	0.13169391	0.687050021	0.293764573	0.17997992	0.813780217	0.390141609	0.835819928	0.942977859	0.390831926
uracil	0.331858494	0.239743605	0.241960443	0.192128177	0.763279436	0.703412348	0.693005876	0.857743672	0.810794399	0.712929879	0.929090538	0.95766404	0.915536916	0.534882652	0.137947853	0.961115417	0.609154725	0.109983288	0.463310082	0.896279857	0.013524957	0.641040916	0.048713691	0.553158595	0.837232858	0.464693628	0.191394273	0.098698076	0.389785169	0.139400498	0.522695648	0.283019243	0.619564454	0.257590507
UDP-glucuronic acid	0.397392351	0.081727024	0.814571504	0.416658167	0.411702756	0.334713092	0.867317387	0.941604834	0.008833272	0.612930542	0.133628887	0.97564935	0.028173137	0.680424126	0.875605725	0.670128166	0.468129282	0.853527142	0.75599337	0.268433558	0.304457765	0.282994939	0.916905126	0.111023332	0.600471204	0.45808946	0.933967081	0.527449189	0.240047557	0.730424856	0.320313771	0.602153936	0.956030123	0.71167641
tyrosine	0.950697389	0.54512851	0.822179193	0.713847252	0.592525292	0.892298871	0.341299897	0.546425242	0.763078851	0.872993043	0.905370365	0.098059226	0.12928531	0.472988428	0.123188807	0.738850778	0.832219977	0.267076073	0.038187567	0.829662192	0.690554802	0.104375844	0.647475995	0.853851753	0.627867885	0.429286519	0.448251049	0.937631935	0.559142317	0.258648088	0.877140504	0.3063388	0.762813605	0.920029834
tryptophan	0.20567977	0.461177552	0.262685871	0.896919567	0.082619779	0.852790966	0.010926207	0.550751853	0.321549544	0.412402121	0.367151399	0.129043475	0.402548648	0.422715539	0.042172496	0.646162025	0.73068589	0.631788849	0.550816543	0.446633692	0.529313735	0.419657187	0.107605141	0.087628545	0.756120087	0.268866306	0.811028259	0.46457358	0.941161331	0.980276839	0.360261153	0.867993977	0.263329761	0.376951437
trans-4-hydroxyproline	0.609482696	0.449383693	0.981588998	0.523017993	0.397074253	0.505638488	0.790325479	0.320286015	0.906253234	0.148799405	0.41826356	0.869257684	0.428847995	0.338448776	0.804438314	0.330241162	0.984879899	0.811750535	0.491412028	0.682251198	0.527620968	0.733977501	0.02929158	0.153848159	0.108895486	0.064881015	0.519465129	0.879943763	0.239794283	0.569392163	0.416651752	0.491510719	0.934057106	0.1741919
tocopherol alpha-	0.923938466	0.969199638	0.369090923	0.383969882	0.809896063	0.331704089	0.217691994	0.481656761	0.517715833	0.950289324	0.313847751	0.422154337	0.383229359	0.61600729	0.418449306	0.611419987	0.662013032	0.963041166	0.855054578	0.68690204	0.833411666	0.394833583	0.305905363	0.534469075	0.858605772	0.29747954	0.407677136	0.394602631	0.380010294	0.913033061	0.833155965	0.042791504	0.338830913	0.085398067
thymine	0.872511903	0.826919779	0.161216665	0.572688064	0.201413504	0.027610243	0.664746751	0.395648466	0.780573303	0.381482013	0.187631878	0.605429146	0.891388633	0.496433598	0.150793909	0.426458794	0.917887816	0.381690227	0.848182079	0.876248562	0.053382295	0.815019303	0.937192157	0.091887679	0.240077052	0.137044511	0.305510454	0.603775696	0.019825664	0.87147471	0.700343441	0.069348694	0.101992526	0.522805613
thymidine	0.659274918	0.882391476	0.127277478	0.578835004	0.033384202	0.973027386	0.42866086	0.789509661	0.366814038	0.029574349	0.174722928	0.786774448	0.298581732	0.291543221	0.863560281	0.577156157	0.061007146	0.966066078	0.97290092	0.024499012	0.788062512	0.351263714	0.362588164	0.259549808	0.80184549	0.134526765	0.487531389	0.191099837	0.990255532	0.156137559	0.340941645	0.028977889	0.232156999	0.10849482
threonine	0.031562695	0.086665763	0.609711651	0.870744028	0.498749136	0.714366702	0.314888027	0.992221385	0.238285869	0.450856454	0.649992136	0.239156669	0.757925559	0.178896992	0.813290774	0.126027035	0.603014254	0.386959676	0.915562901	0.950073233	0.828205933	0.817999304	0.491654708	0.21507011	0.95488025	0.839024179	0.578598225	0.069296957	0.742356368	0.629248509	0.123817542	0.247277663	0.281555043	0.038816506
threonic acid	0.90946889	0.985676965	0.226582985	0.31631558	0.411603428	0.923204789	0.941990855	0.76790525	0.337372294	0.927162675	0.582626324	0.603061704	0.906879255	0.592999909	0.539413052	0.48835066	0.525985951	0.336053728	0.28452841	0.031186737	0.692988585	0.503000674	0.996405333	0.728954647	0.944044685	0.203281608	0.736505015	0.8466922	0.159752948	0.812373201	0.484026144	0.602202247	0.74016298	0.697113002
taurine	0.706367452	0.268463574	0.931463772	0.397842884	0.761379499	0.890979221	0.776725254	0.626928846	0.236591574	0.694645545	0.088613814	0.739942914	0.694143797	0.479482078	0.229207208	0.95135881	0.045690848	0.078822237	0.222121201	0.671194447	0.26779259	0.409873728	0.018264737	0.039590533	0.14799026	0.909677288	0.299825359	0.133935246	0.303184368	0.826545041	0.296699874	0.863083517	0.99678011	0.833064034
sulfuric acid	0.797338157	0.720986141	0.164674626	0.534435106	0.186876117	0.584970264	0.437823423	0.429716401	0.21005685	0.027356666	0.708791688	0.14652935	0.687133755	0.878747162	0.566724392	0.857605638	0.167109014	0.482873423	0.524557976	0.609234662	0.769890187	0.391118365	0.93033492	0.33312199	0.427960387	0.316656904	0.361557514	0.337975086	0.4423532	0.654482479	0.057009721	0.182461447	0.453634319	0.13649725
"
twoway = F
library(pacman)
pacman::p_load(data.table,parallel, ez, userfriendlyscience,dendextend,
colorspace,gplots,stringr)
data. = WCMC.Fansly::MetaboAnalystFormat(input,row_start = ifelse(twoway,3,2))
e = data.$e
f = data.$f
p = data.$p
p = p[,c(2,3)]
p
colnames(p)
p[,2]
p = data.frame(p[,2])
e = as.matrix(e)
# e = t(apply(e,1,function(x){
#   x[is.na(x)] = 0.5*min(x,na.rm = T)
#   return(x)
# }))
>>>>>>> ef8a0242c895e85620e95e2a0bffa9835aa638ba
if(twoway){
xlab = paste0(colnames(p)[1], " * " ,colnames(p)[2])
}else{
xlab = colnames(p)[1]
}
if(is.null(factor_order1)||is.na(factor_order1)){
factor_order1 = unique(p[[group1]])
}else{
factor_order1 = strsplit(factor_order1, ",")[[1]]
}
<<<<<<< HEAD
tot.n = length(factor_order1)
m=1
at.x = vector()
for(i in 1:(tot.n+length(factor_order2))){
if(!(i%%(length(factor_order1)+1)==0)){
at.x[m] = m
}
m=m+1
}
at.x = at.x[!is.na(at.x)]
text.pos.x = 1:length(factor_order1)
=======
index=which(gsub(" ", "", f[[1]], fixed = TRUE)%in%gsub(" ", "", compoundName, fixed = TRUE))[1]
oo = index
data = data.frame(value = e[j,],group1 = factor(p[[1]],levels = factor_order1))
j=1
boxplot(value~group1,data = data,notch=FALSE,col=colors,
xaxt="n")
data
factor_order1 = NULL
library(pacman)
pacman::p_load(data.table,parallel, ez, userfriendlyscience,dendextend,
colorspace,gplots,stringr)
data. = WCMC.Fansly::MetaboAnalystFormat(input,row_start = ifelse(twoway,3,2))
e = data.$e
f = data.$f
p = data.$p
p = data.frame(p[,2])
e = as.matrix(e)
xlab = colnames(p)[1]
if(is.null(factor_order1)||is.na(factor_order1)){
factor_order1 = unique(p[[group1]])
}else{
factor_order1 = strsplit(factor_order1, ",")[[1]]
}
>>>>>>> ef8a0242c895e85620e95e2a0bffa9835aa638ba
if(draw_single){
index=which(gsub(" ", "", f[[1]], fixed = TRUE)%in%gsub(" ", "", compoundName, fixed = TRUE))[1]
oo = index
}else{
index=1:nrow(f)
oo=1
}
<<<<<<< HEAD
for(j in index){
data = data.frame(value = e[j,],group1 = factor(p[[1]],levels = factor_order1))
if(!draw_single){
png(paste0(j,'th_',f[j,1],'.png'), width = 800, height = 600)
}
boxplot(value~group1,data = data,notch=FALSE,col=terrain.colors(length(factor_order1)),
xaxt="n")
if(jitter){
stripchart(value ~ group1, vertical = TRUE, data = data,
method = "jitter", add = TRUE, pch = 20, col = 'black',at=at.x)
=======
group1
library(pacman)
pacman::p_load(data.table,parallel, ez, userfriendlyscience,dendextend,
colorspace,gplots,stringr)
data. = WCMC.Fansly::MetaboAnalystFormat(input,row_start = ifelse(twoway,3,2))
e = data.$e
f = data.$f
p = data.$p
p = data.frame(p[,2])
e = as.matrix(e)
# e = t(apply(e,1,function(x){
#   x[is.na(x)] = 0.5*min(x,na.rm = T)
#   return(x)
# }))
if(twoway){
xlab = paste0(colnames(p)[1], " * " ,colnames(p)[2])
}else{
xlab = colnames(p)[1]
}
xlab
colnames(p)[1]
if(is.null(factor_order1)||is.na(factor_order1)){
factor_order1 = unique(p[[group1]])
}else{
factor_order1 = strsplit(factor_order1, ",")[[1]]
>>>>>>> ef8a0242c895e85620e95e2a0bffa9835aa638ba
}
is.null(factor_order1)||is.na(factor_order1)
factor_order1 = unique(p[[1]])
draw_single
index=which(gsub(" ", "", f[[1]], fixed = TRUE)%in%gsub(" ", "", compoundName, fixed = TRUE))[1]
oo = index
oo
j
data = data.frame(value = e[j,],group1 = factor(p[[1]],levels = factor_order1))
data
boxplot(value~group1,data = data,notch=FALSE,col=colors,
xaxt="n")
title(main=f[[1]][j], sub=paste0("compound #: ", j),
xlab=xlab, ylab='intensity')
axis(1,at = 1:length(factor_order1), labels = F)# x axis
text(x = 1:length(factor_order1), par("usr")[3]-0.1, labels = factor_order1, srt = 0, pos = 1, xpd = TRUE)
legend(legend_position,
<<<<<<< HEAD
factor_order1, fill=terrain.colors(length(factor_order1)))
if(!draw_single){
dev.off()
}
}
jitter = T
=======
factor_order1, fill=colors)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
at.x
rm(at.x)
library(pacman)
pacman::p_load(data.table,parallel, ez, userfriendlyscience,dendextend,
colorspace,gplots,stringr)
data. = WCMC.Fansly::MetaboAnalystFormat(input,row_start = ifelse(twoway,3,2))
e = data.$e
f = data.$f
p = data.$p
twoway
name = colnames(p)[2]
p = data.frame(p[,2])
colnames(p) = name
name
e = as.matrix(e)
if(twoway){
xlab = paste0(colnames(p)[1], " * " ,colnames(p)[2])
}else{
xlab = colnames(p)[1]
}
xlab
>>>>>>> ef8a0242c895e85620e95e2a0bffa9835aa638ba
if(is.null(factor_order1)||is.na(factor_order1)){
factor_order1 = unique(p[[1]])
}else{
factor_order1 = strsplit(factor_order1, ",")[[1]]
}
<<<<<<< HEAD
tot.n = length(factor_order1)
m=1
at.x = vector()
for(i in 1:(tot.n+length(factor_order2))){
if(!(i%%(length(factor_order1)+1)==0)){
at.x[m] = m
}
m=m+1
}
at.x = at.x[!is.na(at.x)]
text.pos.x = 1:length(factor_order1)
if(draw_single){
index=which(gsub(" ", "", f$`compound label`, fixed = TRUE)%in%gsub(" ", "", compoundName, fixed = TRUE))[1]
=======
if(draw_single){
index=which(gsub(" ", "", f[[1]], fixed = TRUE)%in%gsub(" ", "", compoundName, fixed = TRUE))[1]
oo = index
}else{
index=1:nrow(f)
oo=1
}
factor_order1 = NULL
if(is.null(factor_order1)||is.na(factor_order1)){
factor_order1 = unique(p[[1]])
}else{
factor_order1 = strsplit(factor_order1, ",")[[1]]
}
if(draw_single){
index=which(gsub(" ", "", f[[1]], fixed = TRUE)%in%gsub(" ", "", compoundName, fixed = TRUE))[1]
>>>>>>> ef8a0242c895e85620e95e2a0bffa9835aa638ba
oo = index
}else{
index=1:nrow(f)
oo=1
}
<<<<<<< HEAD
for(j in index){
data = data.frame(value = e[j,],group1 = factor(p[[1]],levels = factor_order1))
if(!draw_single){
png(paste0(j,'th_',f[j,1],'.png'), width = 800, height = 600)
}
boxplot(value~group1,data = data,notch=FALSE,col=terrain.colors(length(factor_order1)),
=======
data = data.frame(value = e[j,],group1 = factor(p[[1]],levels = factor_order1))
j=1
boxplot(value~group1,data = data,notch=FALSE,col=colors,
>>>>>>> ef8a0242c895e85620e95e2a0bffa9835aa638ba
xaxt="n")
if(jitter){
stripchart(value ~ group1, vertical = TRUE, data = data,
method = "jitter", add = TRUE, pch = 20, col = 'black',at=at.x)
<<<<<<< HEAD
}
title(main=f$`compound label`[j], sub=paste0("compound #: ", j),
xlab=xlab, ylab='intensity')
axis(1,at = 1:length(factor_order1), labels = F)# x axis
text(x = 1:length(factor_order1), par("usr")[3]-0.1, labels = factor_order1, srt = 0, pos = 1, xpd = TRUE)
legend(legend_position,
factor_order1, fill=terrain.colors(length(factor_order1)))
if(!draw_single){
dev.off()
}
}
dev.off()
dev.off()
dev.off()
draw_single = T
library(pacman)
pacman::p_load(data.table,parallel, ez, userfriendlyscience,dendextend,
colorspace,gplots,stringr)
data. = WCMC.Fansly::MetaboAnalystFormat(input,row_start = ifelse(twoway,3,2))
e = data.$e
f = data.$f
p = data.$p
=======
}
stripchart(value ~ group1, vertical = TRUE, data = data,
method = "jitter", add = TRUE, pch = 20, col = 'black')
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
>>>>>>> ef8a0242c895e85620e95e2a0bffa9835aa638ba
library(WCMC.Stat.Boxplot)
