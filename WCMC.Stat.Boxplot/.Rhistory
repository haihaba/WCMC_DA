text(x = text.pos.x, par("usr")[3]-0.1, labels = factor_order2, srt = 0, pos = 1, xpd = TRUE,cex=2)
if(!legend_position=='none'){
legend(legend_position,
c("RT-22C","TN-30C"), fill=c('blue','green'))
}
boxplot(value~group1*group2,data = data,notch=FALSE,col=c('blue','green'),
xaxt="n",at = at.x, cex.axis=2)
if(jitter){
stripchart(value ~ group1*group2, vertical = TRUE, data = data,
method = "jitter", add = TRUE, pch = 20, col = 'black',at=at.x)
}
title(main=f$`compound label`[j], xlab=xlab, ylab='intensity',cex.lab=2, cex.main=4, cex.sub=2)
axis(1,at = text.pos.x, labels = F)# x axis
text(x = text.pos.x, par("usr")[3]-0.1, labels = factor_order2, srt = 0, pos = 1, xpd = TRUE,cex=2)
if(!legend_position=='none'){
legend(legend_position,
c("RT-22C","TN-30C"), fill=c('blue','green'))
}
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
purl <- "http://wcmc-da.fiehnlab.ucdavis.edu/ocpu/library/utils/R/install.packages"
library(RCurl)
library(jsonlite)
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.Boxplot_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Course2017.STAT_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Course2017.STAT_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.Boxplot_0.1.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Stat.Boxplot_0.1.0.tar.gz")))
input = "time	0h	0h	0h	0h	0h	0h	0h	0h	0h	4h	4h	4h	4h	4h	4h	4h	4h	12h	12h	12h	12h	12h	12h	12h	12h	12h	24h	24h	24h	24h	24h	24h	24h	24h
treatment	RT	RT	RT	RT	C	C	C	C	C	RT	RT	RT	RT	C	C	C	C	RT	RT	RT	RT	RT	C	C	C	C	RT	RT	RT	RT	C	C	C	C
label	RT 0HR 1_001	RT 0HR 2_002	RT 0HR 3_003	RT 0HR 4_004	30 C 0HR 1_005	30 C 0HR 2_006	30 C 0HR 3_007	30 C OHR 4_008	30 C OHR 5_009	RT 4HR 1_010	RT 4HR 2_011	RT 4HR 3_012	RT 4HR 4_013	30 C 4 HR 4_017	30 C 4HR 1_014	30 C 4HR 2_015	30 C 4HR 3_016	RT 12 HR 1_018	RT 12 HR 2_019	RT 12 HR 3_020	RT 12 HR 4_021	RT 12 HR 5_022	30 C 12 HR 1_023	30 C 12 HR 2_024	30 C 12 HR 3_025	30 C 12 HR 4_026	RT 24 HR 3_029	RT 24 HR 4_030	RT 24HR 1_027	RT 24HR 2_028	30 C 24HR 1_031	30 C 24HR 2_032	30 C 24HR 3_033	30 C 24HR 4_034
zymosterol	0.999656571	0.620669745	0.042033185	0.938200104	0.364555686	0.022094132	0.899561049	0.601323751	0.269048459	0.430607445	0.281390878	0.018184994	0.056198123	0.721991609	0.299353872	0.157902847	0.076582137	0.883938987	0.403119302	0.489876309	0.579933031	0.269613006	0.978192253	0.342081686	0.502940645	0.543637841	0.654142985	0.514797102	0.787714383	0.687676286	0.117570324	0.818744361	0.425593652	0.673911662
xylulose NIST	0.732645723	0.986768882	0.238639446	0.425466437	0.459812771	0.510113528	0.040759082	0.15282482	0.79240713	0.140330158	0.464890847	0.119817075	0.560043666	0.68190572	0.518171712	0.085963642	0.0268425	0.216047013	0.797857076	0.040605345	0.492281562	0.28886229	0.637243018	0.215034337	0.722947322	0.053456215	0.907145412	0.35037957	0.538241752	0.319263925	0.525374728	0.21358433	0.46227667	0.220319379
xylose	0.26352052	0.942575923	0.988423759	0.753075383	0.869738647	0.883059393	0.114105147	0.885474184	0.54609541	0.414444438	0.026683794	0.284081855	0.749789044	0.637771089	0.981843795	0.153670184	0.802832258	0.631145816	0.181149136	0.333006174	0.559257764	0.491738614	0.708325987	0.018029116	0.654235834	0.590666317	0.194882513	0.399745469	0.467271968	0.06292479	0.08943975	0.334496999	0.529739529	0.260752517
xylonic acid isomer	0.215879443	0.818752195	0.990063306	0.161058368	0.664120762	0.906621962	0.426597477	0.505981663	0.240523164	0.819625729	0.639061992	0.019496628	0.778408645	0.174013694	0.499871465	0.259420245	0.332042252	0.07225088	0.861875632	0.783765179	0.738158546	0.051681875	0.324122245	0.051280167	0.545693409	0.961003127	0.750789951	0.348166105	0.40906945	0.156716222	0.986635382	0.262447295	0.501521514	0.260489472
xylitol	0.814315932	0.529301214	0.198827546	0.613641888	0.580764507	0.287300708	0.774655344	0.157529493	0.618651613	0.668744191	0.708744485	0.135772717	0.865192256	0.200409791	0.848062591	0.285140628	0.126522047	0.79838088	0.429144251	0.641001662	0.9160487	0.672768096	0.384828244	0.163733752	0.313000745	0.92751138	0.05061115	0.308641063	0.158629668	0.091926624	0.137222722	0.230323954	0.421767949	0.42613246
valine	0.259578332	0.059606018	0.022877696	0.074317422	0.039327767	0.352005366	0.752577197	0.403352858	0.24804868	0.636467316	0.72293114	0.400086908	0.591751939	0.806807175	0.154469671	0.092851812	0.968932546	0.849495596	0.582805872	0.950094208	0.82324416	0.474994146	0.865497101	0.66593146	0.760898301	0.195433538	0.013495526	0.304782179	0.945686782	0.986724829	0.134241638	0.584127937	0.621883843	0.184467415
uric acid	0.710217089	0.633512746	0.04368992	0.99808341	0.786425237	0.957290713	0.657421579	0.567053705	0.247838205	0.846441623	0.003165387	0.89078735	0.676400097	0.67906538	0.41700288	0.106143974	0.662703221	0.442499641	0.206791838	0.823211814	0.819418398	0.147779495	0.986526529	0.755439358	0.946864392	0.771909513	0.39969164	0.074561407	0.44525885	0.804695688	0.212885736	0.971778087	0.746255299	0.849149645
urea	0.543536396	0.64248393	0.730906899	0.120112292	0.853488584	0.493183762	0.951596979	0.581468806	0.164308123	0.772730898	0.765461679	0.358624828	0.535863677	0.922578732	0.987005476	0.299794997	0.833704228	0.525494462	0.440147112	0.56673689	0.813282411	0.144462693	0.353096042	0.918996867	0.3635788	0.307800921	0.823261591	0.001751549	0.990127521	0.156966283	0.743763624	0.129587949	0.983910296	0.541354642
uracil	0.635863607	0.613166957	0.076396198	0.954930564	0.855238002	0.861646381	0.078298979	0.558486852	0.131628456	0.322594782	0.221319296	0.838912461	0.346288722	0.720009144	0.383401171	0.066295075	0.501687158	0.908665779	0.059432552	0.900360864	0.013667364	0.535291883	0.255016433	0.005649655	0.412505564	0.636728815	0.854868018	0.314787774	0.660710667	0.866666153	0.179953995	0.324747411	0.381810812	0.006830827
UDP-glucuronic acid	0.496925494	0.144791498	0.20230271	0.398439629	0.294203787	0.870692556	0.747009998	0.97551203	0.923886455	0.211560854	0.804365931	0.3642905	0.77682009	0.499157584	0.174044738	0.956464338	0.329185886	0.534053706	0.678977698	0.173629261	0.344305312	0.163252736	0.227210939	0.378241992	0.101154387	0.147990051	0.700014323	0.109593472	0.633465991	0.192212503	0.997579871	0.993077699	0.892744382	0.312175586
tyrosine	0.957567053	0.623194628	0.525971884	0.65402356	0.985050525	0.491073576	0.254747906	0.153153524	0.705935257	0.993713974	0.265693267	0.935951906	0.258944261	0.305435104	0.283360395	0.263770171	0.016541809	0.855960752	0.93658413	0.366642927	0.243368441	0.091787352	0.226512694	0.229677677	0.149613574	0.752413629	0.535376134	0.398467697	0.61969596	0.289017592	0.756082506	0.698390683	0.95834437	0.035256162
tryptophan	0.977842803	0.716847165	0.833785115	0.355767805	0.735791397	0.743684324	0.687091858	0.654988231	0.617736175	0.597052399	0.680725894	0.022081347	0.988042454	0.261061305	0.933819763	0.892608753	0.127555162	0.911434701	0.490707606	0.650869187	0.861839043	0.792578846	0.53675091	0.668527799	0.604381245	0.187136969	0.028846064	0.675498749	0.317933794	0.763792815	0.381405003	0.804107036	0.722599233	0.017230816
trans-4-hydroxyproline	0.358020263	0.190635688	0.792797554	0.511598206	0.758569028	0.667355477	0.984268457	0.199330297	0.691748738	0.276531181	0.856018209	0.215885018	0.287478873	0.334474015	0.707886054	0.591426223	0.343179925	0.038015753	0.3988974	0.915719258	0.838756252	0.448935034	0.133003743	0.070941701	0.953817001	0.199121192	0.251731315	0.198427299	0.317465798	0.998997046	0.799196004	0.351165018	0.405352016	0.894785668
tocopherol alpha-	0.781825928	0.662564007	0.709887158	0.997540875	0.813870063	0.623170037	0.17864131	0.578352049	0.634385308	0.720647495	0.960482968	0.45066008	0.832747888	0.46593925	0.678022146	0.781870924	0.545831998	0.935881009	0.615965273	0.151437555	0.900359897	0.527204861	0.067439826	0.143293245	0.595784633	0.835442351	0.385471394	0.346166886	0.648896743	0.471348148	0.146902872	0.18244787	0.654743894	0.425766452
thymine	0.77806944	0.046525237	0.003237692	0.3014965	0.384838284	0.016972094	0.127440051	0.20399132	0.719904801	0.279000438	0.98290274	0.822478592	0.288962187	0.211704473	0.760778482	0.995970275	0.660143361	0.392189215	0.561068314	0.532074807	0.775218296	0.566554986	0.026394721	0.9505675	0.732320738	0.969379199	0.169982553	0.693400597	0.036753712	0.479082625	0.690394838	0.639074379	0.311086257	0.767502141
thymidine	0.472042078	0.317967022	0.526333267	0.793456249	0.200596702	0.47798165	0.229552878	0.832439244	0.611709539	0.937135185	0.685418999	0.317404546	0.595006895	0.989303083	0.284911745	0.885713655	0.680295272	0.825689718	0.033114346	0.401401123	0.662481733	0.645636577	0.112763702	0.861335756	0.85788018	0.290382591	0.404696554	0.628690764	0.392483593	0.736011073	0.462741829	0.720825738	0.580123415	0.768476772
threonine	0.701156054	0.865051497	0.758633793	0.199392199	0.198748776	0.722671328	0.049210613	0.333143902	0.845099115	0.286706443	0.257842647	0.517929416	0.186098554	0.755366985	0.717698329	0.348183295	0.43768767	0.646124132	0.26105961	0.453915899	0.430781696	0.787172977	0.432149905	0.522933664	0.284008086	0.965738226	0.306718037	0.523857727	0.372535878	0.206162502	0.711080904	0.193243239	0.515003055	0.817013899
threonic acid	0.460010396	0.785245828	0.624500622	0.328501599	0.556736448	0.625503521	0.957573102	0.665387459	0.809755063	0.227605379	0.109709549	0.606626736	0.740944641	0.649294181	0.927663647	0.021507947	0.955809453	0.857542875	0.543258386	0.581458235	0.614489321	0.302187411	0.256829081	0.249122911	0.60176433	0.173536255	0.919885273	0.00727801	0.394718441	0.188575495	0.466014909	0.638921117	0.277815215	0.485632402
taurine	0.385179113	0.174006253	0.340229211	0.983210302	0.339194726	0.263329265	0.606242026	0.641392166	0.377935163	0.764201702	0.422602821	0.419251103	0.826385342	0.146457424	0.56905593	0.208436019	0.983875735	0.246590785	0.469597308	0.817052094	0.27743692	0.423127412	0.479459323	0.443903283	0.731748608	0.39898197	0.617445717	0.191314355	0.810444591	0.697394329	0.879783033	0.912796486	0.772217933	0.11173618
sulfuric acid	0.59133311	0.60040805	0.75241035	0.330776674	0.64755402	0.174934718	0.273069379	0.892916269	0.245812628	0.889233344	0.562860465	0.761578248	0.371535865	0.471729894	0.628369984	0.620548961	0.651256326	0.69177252	0.419916643	0.688125943	0.120943586	0.980905044	0.744370839	0.909287	0.698353563	0.257317365	0.114367312	0.632194538	0.408225701	0.150196703	0.091627834	0.269736814	0.339125675	0.599428049"
twoway = TRUE
factor_order1 = NULL
factor_order2 = NULL
legend_position = 'topleft'
draw_single = T
compoundName = 'zymosterol'
jitter = TRUE
library(pacman)
pacman::p_load(data.table,parallel, ez, userfriendlyscience,dendextend,
colorspace,gplots,stringr)
data. = WCMC.Fansly::MetaboAnalystFormat(input,row_start = ifelse(twoway,3,2))
e = data.$e
f = data.$f
p = data.$p
if(twoway){
p = p[,c(2,3)] # this makes the group1 the first column and the group2 2nd column.
}else{
p = p[2]
}
e = as.matrix(e)
e = t(apply(e,1,function(x){
x[is.na(x)] = 0.5*min(x,na.rm = T)
return(x)
}))
if(twoway){
xlab = paste0(colnames(p)[1], " * " ,colnames(p)[2])
}else{
xlab = colnames(p)[1]
}
if(is.null(factor_order1)||is.na(factor_order1)){
factor_order1 = unique(p[[1]])
}else{
factor_order1 = strsplit(factor_order1, ",")[[1]]
}
if(is.null(factor_order2)||is.na(factor_order2)){
factor_order2 = unique(p[[2]])
}else{
factor_order2 = strsplit(factor_order2, ",")[[1]]
}
tot.n = length(factor_order1)*length(factor_order2)
m=1
at.x = vector()
for(i in 1:(tot.n+length(factor_order2))){
if(!(i%%(length(factor_order1)+1)==0)){
at.x[m] = m
}
m=m+1
}
at.x = at.x[!is.na(at.x)]
text.pos.x = seq((tot.n/length(factor_order2)+1)/2,tot.n,by = tot.n/length(factor_order2))
text.pos.x = text.pos.x + 0:(length(text.pos.x)-1)
if(draw_single){
index=which(gsub(" ", "", f$`compound label`, fixed = TRUE)%in%gsub(" ", "", compoundName, fixed = TRUE))[1]
oo = index
}else{
index=1:nrow(f)
oo=1
}
j = 1
data = data.frame(value = e[j,],group1 = factor(p[[1]],levels = factor_order1), group2 = factor(p[[2]],levels = factor_order2))
boxplot(value~group1*group2,data = data,notch=FALSE,col=terrain.colors(length(factor_order1)),
xaxt="n",at = at.x)
title(main=f$`compound label`[j], sub=paste0("compound #: ", j),
xlab=xlab, ylab='intensity')
axis(1,at = text.pos.x, labels = F)# x axis
text(x = text.pos.x, par("usr")[3]-0.1, labels = factor_order2, srt = 0, pos = 1, xpd = TRUE)
if(!legend_position=='none'){
legend(legend_position,
factor_order1, fill=terrain.colors(length(factor_order1)))
}
terrain.colors(length(factor_order1))
?terrain.colors
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
terrain.colors(length(factor_order1))
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
dev.off()
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
purl <- "http://wcmc-da.fiehnlab.ucdavis.edu/ocpu/library/utils/R/install.packages"
library(RCurl)
library(jsonlite)
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/barupal/ChemRICH/raw/master/ChemRICH_1.0.0.tar.gz")))
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Course2017.STAT_0.1.0.tar.gz")))
install.packages("C:/Users/fansi/Downloads/ChemRICH_1.0.0.tar.gz", repos = NULL, type = "source")
find.package("rJava")
install.packages("https://github.com/slfan2013/WCMC_DA/raw/master/WCMC.Course2017.STAT_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("https://github.com/barupal/ChemRICH/raw/master/ChemRICH_1.0.0.tar.gz", repos = NULL, type = "source")
install.packages("https://github.com/barupal/ChemRICH/raw/master/ChemRICH_1.0.0.tar.gz", repos = NULL, type = "source")
getURL(purl,customrequest='POST',httpheader=c('Content-Type'='application/json'),
postfields=toJSON(list(pkgs="https://github.com/barupal/ChemRICH/raw/master/ChemRICH_1.0.0.tar.gz")))
isntall.p
install.packages("rJava")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
colors
terrain.colors(length(unique(p[[1]])))
?terrain.colors
col2rgb("#00A600FF")
colors = terrain.colors(length(unique(p[[1]])))
substring(colors,1,7)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
colors
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(pacman)
pacman::p_load(data.table,parallel, ez, userfriendlyscience,dendextend,
colorspace,gplots,stringr)
data. = WCMC.Fansly::MetaboAnalystFormat(input,row_start = ifelse(twoway,3,2))
e = data.$e
f = data.$f
p = data.$p
p = p[,c(2,3)] # this makes the group1 the first column and the group2 2nd column.
e = as.matrix(e)
if(twoway){
xlab = paste0(colnames(p)[1], " * " ,colnames(p)[2])
}else{
xlab = colnames(p)[1]
}
input = "treatment	RT	RT	RT	RT	C	C	C	C	C	RT	RT	RT	RT	C	C	C	C	RT	RT	RT	RT	RT	C	C	C	C	RT	RT	RT	RT	C	C	C	C
label	RT 0HR 1_001	RT 0HR 2_002	RT 0HR 3_003	RT 0HR 4_004	30 C 0HR 1_005	30 C 0HR 2_006	30 C 0HR 3_007	30 C OHR 4_008	30 C OHR 5_009	RT 4HR 1_010	RT 4HR 2_011	RT 4HR 3_012	RT 4HR 4_013	30 C 4 HR 4_017	30 C 4HR 1_014	30 C 4HR 2_015	30 C 4HR 3_016	RT 12 HR 1_018	RT 12 HR 2_019	RT 12 HR 3_020	RT 12 HR 4_021	RT 12 HR 5_022	30 C 12 HR 1_023	30 C 12 HR 2_024	30 C 12 HR 3_025	30 C 12 HR 4_026	RT 24 HR 3_029	RT 24 HR 4_030	RT 24HR 1_027	RT 24HR 2_028	30 C 24HR 1_031	30 C 24HR 2_032	30 C 24HR 3_033	30 C 24HR 4_034
zymosterol	0.072624157	0.522130695	0.610371889	0.515466528	0.741237921	0.950946558	0.795490033	0.392803108	0.727607684	0.657143706	0.23061301	0.996036917	0.085744999	0.16638601	0.24941174	0.458768389	0.693203988	0.351469888	0.806538656	0.602612982	0.519948688	0.731015426	0.365643449	0.24665442	0.650700619	0.26088001	0.850988197	0.035388328	0.005177232	0.830364892	0.328084542	0.972050221	0.827189089	0.358998227
xylulose NIST	0.963033575	0.993545901	0.401104873	0.251816768	0.731969403	0.698835231	0.050248175	0.546405167	0.373827269	0.290950143	0.58884033	0.849164816	0.710544519	0.909175292	0.803390552	0.273921016	0.361825063	0.254686551	0.562455104	0.223948046	0.268209663	0.03391265	0.764728962	0.887369424	0.339625949	0.440682095	0.647746353	0.159930774	0.275991081	0.687209828	0.975917144	0.844981502	0.183999946	0.231836265
xylose	0.494628857	0.755879999	0.003923013	0.15904817	0.717131505	0.199652125	0.687864754	0.401209954	0.829458722	0.923757236	0.315538847	0.486160216	0.214116057	0.449991721	0.853268557	0.464292535	0.656551288	0.138873338	0.40574902	0.718421859	0.793116418	0.120480486	0.322691333	0.973689422	0.715156639	0.195294909	0.83010301	0.747198338	0.207131684	0.736414214	0.900771445	0.290919704	0.999144643	0.745250874
xylonic acid isomer	0.515624483	0.930483583	0.720851042	0.891048111	0.153720087	0.660186327	0.257467629	0.513631792	0.407297214	0.281874728	0.037264964	0.137202955	0.305351155	0.969719441	0.088803689	0.79808289	0.564120593	0.230024705	0.208208044	0.773173568	0.032366661	0.249633647	0.685790778	0.697601973	0.253814178	0.214394187	0.46764317	0.877515787	0.122609287	0.806805614	0.861461845	0.119058041	0.354025696	0.839769367
xylitol	0.256406837	0.117367705	0.478212991	0.364938569	0.276384134	0.57260728	0.66023136	0.923000772	0.928152536	0.418441977	0.741226596	0.632087493	0.780341319	0.338624186	0.784599016	0.461375789	0.830442802	0.170247346	0.122240611	0.857790374	0.858533156	0.324846861	0.745186936	0.747592585	0.520929199	0.680620763	0.58350684	0.314066538	0.81286517	0.522170698	0.629113181	0.091182572	0.969486308	0.459504988
valine	0.088685482	0.464784901	0.735598053	0.943298938	0.689653622	0.054655608	0.029730838	0.104576759	0.99432536	0.855235485	0.675578491	0.901184635	0.917979816	0.38234019	0.936796364	0.990367798	0.952477637	0.215499552	0.045066801	0.711976029	0.127775129	0.286145194	0.918248424	0.905404286	0.089890439	0.971494853	0.384436214	0.988066852	0.628646483	0.226968853	0.374770784	0.736935619	0.043842775	0.197084632
uric acid	0.878790448	0.552074995	0.957415587	0.079395291	0.054122238	0.605017521	0.063162933	0.464398818	0.567391482	0.777992633	0.943377377	0.271574685	0.55913145	0.246098702	0.777379214	0.964030404	0.898330708	0.686945939	0.695646594	0.104636135	0.438470031	0.647668284	0.30303019	0.086147214	0.984773645	0.104480699	0.183386946	0.870907502	0.450083932	0.029148615	0.359763587	0.238266178	0.981431146	0.585540439
urea	0.199490693	0.077665015	0.473773366	0.435867678	0.480624164	0.773570088	0.812180115	0.616230953	0.922140833	0.381404007	0.393660213	0.0271887	0.351774202	0.465551679	0.104517231	0.253371876	0.990708581	0.03826951	0.83123641	0.984284696	0.637782586	0.65079026	0.612407252	0.46145254	0.881978827	0.13169391	0.687050021	0.293764573	0.17997992	0.813780217	0.390141609	0.835819928	0.942977859	0.390831926
uracil	0.331858494	0.239743605	0.241960443	0.192128177	0.763279436	0.703412348	0.693005876	0.857743672	0.810794399	0.712929879	0.929090538	0.95766404	0.915536916	0.534882652	0.137947853	0.961115417	0.609154725	0.109983288	0.463310082	0.896279857	0.013524957	0.641040916	0.048713691	0.553158595	0.837232858	0.464693628	0.191394273	0.098698076	0.389785169	0.139400498	0.522695648	0.283019243	0.619564454	0.257590507
UDP-glucuronic acid	0.397392351	0.081727024	0.814571504	0.416658167	0.411702756	0.334713092	0.867317387	0.941604834	0.008833272	0.612930542	0.133628887	0.97564935	0.028173137	0.680424126	0.875605725	0.670128166	0.468129282	0.853527142	0.75599337	0.268433558	0.304457765	0.282994939	0.916905126	0.111023332	0.600471204	0.45808946	0.933967081	0.527449189	0.240047557	0.730424856	0.320313771	0.602153936	0.956030123	0.71167641
tyrosine	0.950697389	0.54512851	0.822179193	0.713847252	0.592525292	0.892298871	0.341299897	0.546425242	0.763078851	0.872993043	0.905370365	0.098059226	0.12928531	0.472988428	0.123188807	0.738850778	0.832219977	0.267076073	0.038187567	0.829662192	0.690554802	0.104375844	0.647475995	0.853851753	0.627867885	0.429286519	0.448251049	0.937631935	0.559142317	0.258648088	0.877140504	0.3063388	0.762813605	0.920029834
tryptophan	0.20567977	0.461177552	0.262685871	0.896919567	0.082619779	0.852790966	0.010926207	0.550751853	0.321549544	0.412402121	0.367151399	0.129043475	0.402548648	0.422715539	0.042172496	0.646162025	0.73068589	0.631788849	0.550816543	0.446633692	0.529313735	0.419657187	0.107605141	0.087628545	0.756120087	0.268866306	0.811028259	0.46457358	0.941161331	0.980276839	0.360261153	0.867993977	0.263329761	0.376951437
trans-4-hydroxyproline	0.609482696	0.449383693	0.981588998	0.523017993	0.397074253	0.505638488	0.790325479	0.320286015	0.906253234	0.148799405	0.41826356	0.869257684	0.428847995	0.338448776	0.804438314	0.330241162	0.984879899	0.811750535	0.491412028	0.682251198	0.527620968	0.733977501	0.02929158	0.153848159	0.108895486	0.064881015	0.519465129	0.879943763	0.239794283	0.569392163	0.416651752	0.491510719	0.934057106	0.1741919
tocopherol alpha-	0.923938466	0.969199638	0.369090923	0.383969882	0.809896063	0.331704089	0.217691994	0.481656761	0.517715833	0.950289324	0.313847751	0.422154337	0.383229359	0.61600729	0.418449306	0.611419987	0.662013032	0.963041166	0.855054578	0.68690204	0.833411666	0.394833583	0.305905363	0.534469075	0.858605772	0.29747954	0.407677136	0.394602631	0.380010294	0.913033061	0.833155965	0.042791504	0.338830913	0.085398067
thymine	0.872511903	0.826919779	0.161216665	0.572688064	0.201413504	0.027610243	0.664746751	0.395648466	0.780573303	0.381482013	0.187631878	0.605429146	0.891388633	0.496433598	0.150793909	0.426458794	0.917887816	0.381690227	0.848182079	0.876248562	0.053382295	0.815019303	0.937192157	0.091887679	0.240077052	0.137044511	0.305510454	0.603775696	0.019825664	0.87147471	0.700343441	0.069348694	0.101992526	0.522805613
thymidine	0.659274918	0.882391476	0.127277478	0.578835004	0.033384202	0.973027386	0.42866086	0.789509661	0.366814038	0.029574349	0.174722928	0.786774448	0.298581732	0.291543221	0.863560281	0.577156157	0.061007146	0.966066078	0.97290092	0.024499012	0.788062512	0.351263714	0.362588164	0.259549808	0.80184549	0.134526765	0.487531389	0.191099837	0.990255532	0.156137559	0.340941645	0.028977889	0.232156999	0.10849482
threonine	0.031562695	0.086665763	0.609711651	0.870744028	0.498749136	0.714366702	0.314888027	0.992221385	0.238285869	0.450856454	0.649992136	0.239156669	0.757925559	0.178896992	0.813290774	0.126027035	0.603014254	0.386959676	0.915562901	0.950073233	0.828205933	0.817999304	0.491654708	0.21507011	0.95488025	0.839024179	0.578598225	0.069296957	0.742356368	0.629248509	0.123817542	0.247277663	0.281555043	0.038816506
threonic acid	0.90946889	0.985676965	0.226582985	0.31631558	0.411603428	0.923204789	0.941990855	0.76790525	0.337372294	0.927162675	0.582626324	0.603061704	0.906879255	0.592999909	0.539413052	0.48835066	0.525985951	0.336053728	0.28452841	0.031186737	0.692988585	0.503000674	0.996405333	0.728954647	0.944044685	0.203281608	0.736505015	0.8466922	0.159752948	0.812373201	0.484026144	0.602202247	0.74016298	0.697113002
taurine	0.706367452	0.268463574	0.931463772	0.397842884	0.761379499	0.890979221	0.776725254	0.626928846	0.236591574	0.694645545	0.088613814	0.739942914	0.694143797	0.479482078	0.229207208	0.95135881	0.045690848	0.078822237	0.222121201	0.671194447	0.26779259	0.409873728	0.018264737	0.039590533	0.14799026	0.909677288	0.299825359	0.133935246	0.303184368	0.826545041	0.296699874	0.863083517	0.99678011	0.833064034
sulfuric acid	0.797338157	0.720986141	0.164674626	0.534435106	0.186876117	0.584970264	0.437823423	0.429716401	0.21005685	0.027356666	0.708791688	0.14652935	0.687133755	0.878747162	0.566724392	0.857605638	0.167109014	0.482873423	0.524557976	0.609234662	0.769890187	0.391118365	0.93033492	0.33312199	0.427960387	0.316656904	0.361557514	0.337975086	0.4423532	0.654482479	0.057009721	0.182461447	0.453634319	0.13649725
"
twoway = F
library(pacman)
pacman::p_load(data.table,parallel, ez, userfriendlyscience,dendextend,
colorspace,gplots,stringr)
data. = WCMC.Fansly::MetaboAnalystFormat(input,row_start = ifelse(twoway,3,2))
e = data.$e
f = data.$f
p = data.$p
p = p[,c(2,3)]
p
colnames(p)
p[,2]
p = data.frame(p[,2])
e = as.matrix(e)
# e = t(apply(e,1,function(x){
#   x[is.na(x)] = 0.5*min(x,na.rm = T)
#   return(x)
# }))
if(twoway){
xlab = paste0(colnames(p)[1], " * " ,colnames(p)[2])
}else{
xlab = colnames(p)[1]
}
if(is.null(factor_order1)||is.na(factor_order1)){
factor_order1 = unique(p[[group1]])
}else{
factor_order1 = strsplit(factor_order1, ",")[[1]]
}
index=which(gsub(" ", "", f[[1]], fixed = TRUE)%in%gsub(" ", "", compoundName, fixed = TRUE))[1]
oo = index
data = data.frame(value = e[j,],group1 = factor(p[[1]],levels = factor_order1))
j=1
boxplot(value~group1,data = data,notch=FALSE,col=colors,
xaxt="n")
data
factor_order1 = NULL
library(pacman)
pacman::p_load(data.table,parallel, ez, userfriendlyscience,dendextend,
colorspace,gplots,stringr)
data. = WCMC.Fansly::MetaboAnalystFormat(input,row_start = ifelse(twoway,3,2))
e = data.$e
f = data.$f
p = data.$p
p = data.frame(p[,2])
e = as.matrix(e)
xlab = colnames(p)[1]
if(is.null(factor_order1)||is.na(factor_order1)){
factor_order1 = unique(p[[group1]])
}else{
factor_order1 = strsplit(factor_order1, ",")[[1]]
}
if(draw_single){
index=which(gsub(" ", "", f[[1]], fixed = TRUE)%in%gsub(" ", "", compoundName, fixed = TRUE))[1]
oo = index
}else{
index=1:nrow(f)
oo=1
}
group1
library(pacman)
pacman::p_load(data.table,parallel, ez, userfriendlyscience,dendextend,
colorspace,gplots,stringr)
data. = WCMC.Fansly::MetaboAnalystFormat(input,row_start = ifelse(twoway,3,2))
e = data.$e
f = data.$f
p = data.$p
p = data.frame(p[,2])
e = as.matrix(e)
# e = t(apply(e,1,function(x){
#   x[is.na(x)] = 0.5*min(x,na.rm = T)
#   return(x)
# }))
if(twoway){
xlab = paste0(colnames(p)[1], " * " ,colnames(p)[2])
}else{
xlab = colnames(p)[1]
}
xlab
colnames(p)[1]
if(is.null(factor_order1)||is.na(factor_order1)){
factor_order1 = unique(p[[group1]])
}else{
factor_order1 = strsplit(factor_order1, ",")[[1]]
}
is.null(factor_order1)||is.na(factor_order1)
factor_order1 = unique(p[[1]])
draw_single
index=which(gsub(" ", "", f[[1]], fixed = TRUE)%in%gsub(" ", "", compoundName, fixed = TRUE))[1]
oo = index
oo
j
data = data.frame(value = e[j,],group1 = factor(p[[1]],levels = factor_order1))
data
boxplot(value~group1,data = data,notch=FALSE,col=colors,
xaxt="n")
title(main=f[[1]][j], sub=paste0("compound #: ", j),
xlab=xlab, ylab='intensity')
axis(1,at = 1:length(factor_order1), labels = F)# x axis
text(x = 1:length(factor_order1), par("usr")[3]-0.1, labels = factor_order1, srt = 0, pos = 1, xpd = TRUE)
legend(legend_position,
factor_order1, fill=colors)
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
at.x
rm(at.x)
library(pacman)
pacman::p_load(data.table,parallel, ez, userfriendlyscience,dendextend,
colorspace,gplots,stringr)
data. = WCMC.Fansly::MetaboAnalystFormat(input,row_start = ifelse(twoway,3,2))
e = data.$e
f = data.$f
p = data.$p
twoway
name = colnames(p)[2]
p = data.frame(p[,2])
colnames(p) = name
name
e = as.matrix(e)
if(twoway){
xlab = paste0(colnames(p)[1], " * " ,colnames(p)[2])
}else{
xlab = colnames(p)[1]
}
xlab
if(is.null(factor_order1)||is.na(factor_order1)){
factor_order1 = unique(p[[1]])
}else{
factor_order1 = strsplit(factor_order1, ",")[[1]]
}
if(draw_single){
index=which(gsub(" ", "", f[[1]], fixed = TRUE)%in%gsub(" ", "", compoundName, fixed = TRUE))[1]
oo = index
}else{
index=1:nrow(f)
oo=1
}
factor_order1 = NULL
if(is.null(factor_order1)||is.na(factor_order1)){
factor_order1 = unique(p[[1]])
}else{
factor_order1 = strsplit(factor_order1, ",")[[1]]
}
if(draw_single){
index=which(gsub(" ", "", f[[1]], fixed = TRUE)%in%gsub(" ", "", compoundName, fixed = TRUE))[1]
oo = index
}else{
index=1:nrow(f)
oo=1
}
data = data.frame(value = e[j,],group1 = factor(p[[1]],levels = factor_order1))
j=1
boxplot(value~group1,data = data,notch=FALSE,col=colors,
xaxt="n")
if(jitter){
stripchart(value ~ group1, vertical = TRUE, data = data,
method = "jitter", add = TRUE, pch = 20, col = 'black',at=at.x)
}
stripchart(value ~ group1, vertical = TRUE, data = data,
method = "jitter", add = TRUE, pch = 20, col = 'black')
library(WCMC.Stat.Boxplot)
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(opencpu);
opencpu$browse("library/WCMC.Stat.Boxplot/www")
library(WCMC.Stat.Boxplot)
library(WCMC.Stat.Boxplot)
