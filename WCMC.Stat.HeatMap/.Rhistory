<<<<<<< HEAD
key.xlab=NA,  # no xlab
key.par=list(mgp=c(1.5, 0.5, 0),
mar=c(2.5, 2.5, 1, 0)),
key.xtickfun=function() {
breaks <- parent.frame()$breaks
return(list(
at=parent.frame()$scale01(c(breaks[1],
breaks[length(breaks)])),
labels=c(as.character(breaks[1]),
as.character(breaks[length(breaks)]))
))
})
heatmap.2(x,
breaks=256,
key.title=NA,
key.xlab=NA,
key.par=list(mgp=c(1.5, 0.5, 0),
mar=c(1, 2.5, 1, 0)),
key.xtickfun=function() {
cex <- par("cex")*par("cex.axis")
side <- 1
line <- 0
col <- par("col.axis")
font <- par("font.axis")
mtext("low", side=side, at=0, adj=0,
line=line, cex=cex, col=col, font=font)
mtext("high", side=side, at=1, adj=1,
line=line, cex=cex, col=col, font=font)
return(list(labels=FALSE, tick=FALSE))
})
hv <- heatmap.2(x, col=bluered, scale="column", tracecol="#303030")
names(hv)
hv$colorTable
hv$colorTable[hv$colorTable[,"color"]=="#FFFFFF",]
whiteBin <- unlist(hv$colorTable[hv$colorTable[,"color"]=="#FFFFFF",1:2])
rbind(whiteBin[1] * hv$colSDs + hv$colMeans,
whiteBin[2] * hv$colSDs + hv$colMeans )
hv <- heatmap.2(x, col=cm.colors(255), scale="column",
RowSideColors=rc, ColSideColors=cc, margin=c(5, 10),
xlab="specification variables", ylab= "Car Models",
main="heatmap(<Mtcars data>, ..., scale=\"column\")",
tracecol="green", density="density")
hv <- heatmap.2(x, col=cm.colors(255), scale="column",
RowSideColors=rc, ColSideColors=cc, margin=c(5, 10),
xlab="specification variables", ylab= "Car Models",
main="heatmap(<Mtcars data>, ..., scale=\"column\")",
tracecol="green", density="density", colRow=rc, colCol=cc,
srtCol=45, adjCol=c(0.5,1))
data(attitude)
round(Ca <- cor(attitude), 2)
symnum(Ca) # simple graphic
heatmap.2(Ca, 		 symm=TRUE, margin=c(6, 6), trace="none" )
heatmap.2(Ca, Rowv=FALSE, symm=TRUE, margin=c(6, 6), trace="none" )
heatmap.2(x, lmat=rbind( c(0, 3), c(2,1), c(0,4) ), lhei=c(1.5, 4, 2 ) )
heatmap.2(x, lmat=rbind( c(0, 3, 4), c(2,1,0 ) ), lwid=c(1.5, 4, 2 ) )
data(USJudgeRatings)
symnum( cU <- cor(USJudgeRatings) )
hU <- heatmap.2(cU, Rowv=FALSE, symm=TRUE, col=topo.colors(16),
distfun=function(c) as.dist(1 - c), trace="none")
hM <- format(round(cU, 2))
hM
heatmap.2(cU, Rowv=FALSE, symm=TRUE, col=rev(heat.colors(16)),
distfun=function(c) as.dist(1 - c), trace="none",
cellnote=hM)
gplots::heatmap.2(data_row,
main = "A global View of Heatmap",
srtCol = 45,
dendrogram = "both",
Rowv = dend_row,
Colv = dend_col, # this to make sure the columns are not ordered
trace="none",
margins =c(10,10),
key.xlab = "sd",
denscol = "grey",
density.info = "density",
RowSideColors = labels_colors(dend_row), # to add nice colored strips
ColSideColors = labels_colors(dend_col), # to add nice colored strips
col = some_col_func,
colRow = labels_colors(dend_row),
labRow = labels(dend_row),
colCol = labels_colors(dend_col),
labCol = labels(dend_col),
cexCol = 1,
keysize =1
)
labels_colors(dend_row)
as.character(f[[col_col]])
paste(as.character(f[[col_col]])[order.dendrogram(dend_col)],
"(",f[[1]],")",
sep = "")
paste(as.character(f[[col_col]])[order.dendrogram(dend_col)],
"(",f[[1]],")",
sep = "")
distance_method = "euclidean"
minkowski_p = NULL
cluster_method = "complete"
scale_feature = T
scale_sample = T
row_col = "none"
row_branchColorNumber = 1
col_col = "none"
col_branchColorNumber = 1
e = fread("e.csv")[,-1]
f = fread("f.csv")[,-1]
p = fread("p.csv")[,-1]
if(scale_feature){
data_row = scale(t(e))
=======
if(!length(iris_species)==0){
legend("topleft", legend = levels(as.factor(p[[row_col]])), fill = rainbow_hcl(length(unique(p[[row_col]]))))
}
if(row_branchColorNumber==1){
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col='black')
>>>>>>> origin/master
}else{
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col=diverge_hcl)
}
# Label Color
labels_colors(dend_row) <-
rainbow_hcl(length(unique(p[[row_col]])))[sort_levels_values(
as.numeric(as.factor(p[[row_col]]))[order.dendrogram(dend_row)]
)]
# Change Label
if(length(as.character(p[[row_col]]))==0){
labels(dend_row) <- p$`sample label`
}else{
labels(dend_row) <- paste(as.character(p[[row_col]])[order.dendrogram(dend_row)],
"(",p$`sample label`[order.dendrogram(dend_row)],")",
sep = "")
}
# Hang
dend_row <- hang.dendrogram(dend_row,hang = 0.1)
# Label Size
dend_row <- set(dend_row, "labels_cex",1)
# pdf(file = "Dendrogram_Sample.pdf")
plot(dend_row,
main = "Clustered Samples",
horiz =  TRUE,  nodePar = list(cex = .007))
if(!length(iris_species)==0){
legend("topleft", legend = levels(as.factor(p[[row_col]])), fill = rainbow_hcl(length(unique(p[[row_col]]))))
}
if(row_branchColorNumber==1){
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col='black')
}else{
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col=diverge_hsv)
}
# Label Color
labels_colors(dend_row) <-
rainbow_hcl(length(unique(p[[row_col]])))[sort_levels_values(
as.numeric(as.factor(p[[row_col]]))[order.dendrogram(dend_row)]
)]
# Change Label
if(length(as.character(p[[row_col]]))==0){
labels(dend_row) <- p$`sample label`
}else{
labels(dend_row) <- paste(as.character(p[[row_col]])[order.dendrogram(dend_row)],
"(",p$`sample label`[order.dendrogram(dend_row)],")",
sep = "")
}
# Hang
dend_row <- hang.dendrogram(dend_row,hang = 0.1)
# Label Size
dend_row <- set(dend_row, "labels_cex",1)
# pdf(file = "Dendrogram_Sample.pdf")
plot(dend_row,
main = "Clustered Samples",
horiz =  TRUE,  nodePar = list(cex = .007))
if(!length(iris_species)==0){
legend("topleft", legend = levels(as.factor(p[[row_col]])), fill = rainbow_hcl(length(unique(p[[row_col]]))))
}
?topo.colors
if(row_branchColorNumber==1){
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col='black')
}else{
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col=terrain.colors)
}
# Label Color
labels_colors(dend_row) <-
rainbow_hcl(length(unique(p[[row_col]])))[sort_levels_values(
as.numeric(as.factor(p[[row_col]]))[order.dendrogram(dend_row)]
)]
# Change Label
if(length(as.character(p[[row_col]]))==0){
labels(dend_row) <- p$`sample label`
}else{
labels(dend_row) <- paste(as.character(p[[row_col]])[order.dendrogram(dend_row)],
"(",p$`sample label`[order.dendrogram(dend_row)],")",
sep = "")
}
# Hang
dend_row <- hang.dendrogram(dend_row,hang = 0.1)
# Label Size
dend_row <- set(dend_row, "labels_cex",1)
# pdf(file = "Dendrogram_Sample.pdf")
plot(dend_row,
main = "Clustered Samples",
horiz =  TRUE,  nodePar = list(cex = .007))
if(!length(iris_species)==0){
legend("topleft", legend = levels(as.factor(p[[row_col]])), fill = rainbow_hcl(length(unique(p[[row_col]]))))
}
if(row_branchColorNumber==1){
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col='black')
}else{
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col=topo.colors)
}
# Label Color
labels_colors(dend_row) <-
rainbow_hcl(length(unique(p[[row_col]])))[sort_levels_values(
as.numeric(as.factor(p[[row_col]]))[order.dendrogram(dend_row)]
)]
# Change Label
if(length(as.character(p[[row_col]]))==0){
labels(dend_row) <- p$`sample label`
}else{
labels(dend_row) <- paste(as.character(p[[row_col]])[order.dendrogram(dend_row)],
"(",p$`sample label`[order.dendrogram(dend_row)],")",
sep = "")
}
# Hang
dend_row <- hang.dendrogram(dend_row,hang = 0.1)
# Label Size
dend_row <- set(dend_row, "labels_cex",1)
# pdf(file = "Dendrogram_Sample.pdf")
plot(dend_row,
main = "Clustered Samples",
horiz =  TRUE,  nodePar = list(cex = .007))
if(!length(iris_species)==0){
legend("topleft", legend = levels(as.factor(p[[row_col]])), fill = rainbow_hcl(length(unique(p[[row_col]]))))
}
if(row_branchColorNumber==1){
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col='black')
}else{
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col=cm.colors)
}
# Label Color
labels_colors(dend_row) <-
rainbow_hcl(length(unique(p[[row_col]])))[sort_levels_values(
as.numeric(as.factor(p[[row_col]]))[order.dendrogram(dend_row)]
)]
# Change Label
if(length(as.character(p[[row_col]]))==0){
labels(dend_row) <- p$`sample label`
}else{
labels(dend_row) <- paste(as.character(p[[row_col]])[order.dendrogram(dend_row)],
"(",p$`sample label`[order.dendrogram(dend_row)],")",
sep = "")
}
# Hang
dend_row <- hang.dendrogram(dend_row,hang = 0.1)
# Label Size
dend_row <- set(dend_row, "labels_cex",1)
# pdf(file = "Dendrogram_Sample.pdf")
plot(dend_row,
main = "Clustered Samples",
horiz =  TRUE,  nodePar = list(cex = .007))
if(!length(iris_species)==0){
legend("topleft", legend = levels(as.factor(p[[row_col]])), fill = rainbow_hcl(length(unique(p[[row_col]]))))
}
if(row_branchColorNumber==1){
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col='black')
}else{
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col=rainbow)
}
# Label Color
labels_colors(dend_row) <-
rainbow_hcl(length(unique(p[[row_col]])))[sort_levels_values(
as.numeric(as.factor(p[[row_col]]))[order.dendrogram(dend_row)]
)]
# Change Label
if(length(as.character(p[[row_col]]))==0){
labels(dend_row) <- p$`sample label`
}else{
labels(dend_row) <- paste(as.character(p[[row_col]])[order.dendrogram(dend_row)],
"(",p$`sample label`[order.dendrogram(dend_row)],")",
sep = "")
}
# Hang
dend_row <- hang.dendrogram(dend_row,hang = 0.1)
# Label Size
dend_row <- set(dend_row, "labels_cex",1)
# pdf(file = "Dendrogram_Sample.pdf")
plot(dend_row,
main = "Clustered Samples",
horiz =  TRUE,  nodePar = list(cex = .007))
if(!length(iris_species)==0){
legend("topleft", legend = levels(as.factor(p[[row_col]])), fill = rainbow_hcl(length(unique(p[[row_col]]))))
}
if(row_branchColorNumber==1){
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col='black')
}else{
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col=topo.colors)
}
# Label Color
labels_colors(dend_row) <-
rainbow_hcl(length(unique(p[[row_col]])))[sort_levels_values(
as.numeric(as.factor(p[[row_col]]))[order.dendrogram(dend_row)]
)]
# Change Label
if(length(as.character(p[[row_col]]))==0){
labels(dend_row) <- p$`sample label`
}else{
labels(dend_row) <- paste(as.character(p[[row_col]])[order.dendrogram(dend_row)],
"(",p$`sample label`[order.dendrogram(dend_row)],")",
sep = "")
}
# Hang
dend_row <- hang.dendrogram(dend_row,hang = 0.1)
# Label Size
dend_row <- set(dend_row, "labels_cex",1)
# pdf(file = "Dendrogram_Sample.pdf")
plot(dend_row,
main = "Clustered Samples",
horiz =  TRUE,  nodePar = list(cex = .007))
if(!length(iris_species)==0){
legend("topleft", legend = levels(as.factor(p[[row_col]])), fill = rainbow_hcl(length(unique(p[[row_col]]))))
}
if(row_branchColorNumber==1){
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col='black')
}else{
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col=rainbow)
}
# Label Color
labels_colors(dend_row) <-
rainbow_hcl(length(unique(p[[row_col]])))[sort_levels_values(
as.numeric(as.factor(p[[row_col]]))[order.dendrogram(dend_row)]
)]
# Change Label
if(length(as.character(p[[row_col]]))==0){
labels(dend_row) <- p$`sample label`
}else{
labels(dend_row) <- paste(as.character(p[[row_col]])[order.dendrogram(dend_row)],
"(",p$`sample label`[order.dendrogram(dend_row)],")",
sep = "")
}
# Hang
dend_row <- hang.dendrogram(dend_row,hang = 0.1)
# Label Size
dend_row <- set(dend_row, "labels_cex",1)
# pdf(file = "Dendrogram_Sample.pdf")
plot(dend_row,
main = "Clustered Samples",
horiz =  TRUE,  nodePar = list(cex = .007))
if(!length(iris_species)==0){
legend("topleft", legend = levels(as.factor(p[[row_col]])), fill = rainbow_hcl(length(unique(p[[row_col]]))))
}
library(RColorBrewer)
?RColorBrewer
if(row_branchColorNumber==1){
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col='black')
}else{
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col=brewer.pal)
}
# Label Color
labels_colors(dend_row) <-
rainbow_hcl(length(unique(p[[row_col]])))[sort_levels_values(
as.numeric(as.factor(p[[row_col]]))[order.dendrogram(dend_row)]
)]
# Change Label
if(length(as.character(p[[row_col]]))==0){
labels(dend_row) <- p$`sample label`
}else{
labels(dend_row) <- paste(as.character(p[[row_col]])[order.dendrogram(dend_row)],
"(",p$`sample label`[order.dendrogram(dend_row)],")",
sep = "")
}
# Hang
dend_row <- hang.dendrogram(dend_row,hang = 0.1)
# Label Size
dend_row <- set(dend_row, "labels_cex",1)
# pdf(file = "Dendrogram_Sample.pdf")
plot(dend_row,
main = "Clustered Samples",
horiz =  TRUE,  nodePar = list(cex = .007))
if(!length(iris_species)==0){
legend("topleft", legend = levels(as.factor(p[[row_col]])), fill = rainbow_hcl(length(unique(p[[row_col]]))))
}
if(row_branchColorNumber==1){
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col='black')
}else{
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col=display.brewer.pal)
}
# Label Color
labels_colors(dend_row) <-
rainbow_hcl(length(unique(p[[row_col]])))[sort_levels_values(
as.numeric(as.factor(p[[row_col]]))[order.dendrogram(dend_row)]
)]
# Change Label
if(length(as.character(p[[row_col]]))==0){
labels(dend_row) <- p$`sample label`
}else{
labels(dend_row) <- paste(as.character(p[[row_col]])[order.dendrogram(dend_row)],
"(",p$`sample label`[order.dendrogram(dend_row)],")",
sep = "")
}
# Hang
dend_row <- hang.dendrogram(dend_row,hang = 0.1)
# Label Size
dend_row <- set(dend_row, "labels_cex",1)
# pdf(file = "Dendrogram_Sample.pdf")
plot(dend_row,
main = "Clustered Samples",
horiz =  TRUE,  nodePar = list(cex = .007))
if(!length(iris_species)==0){
legend("topleft", legend = levels(as.factor(p[[row_col]])), fill = rainbow_hcl(length(unique(p[[row_col]]))))
}
if(row_branchColorNumber==1){
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col='black')
}else{
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col=display.brewer.all)
}
# Label Color
labels_colors(dend_row) <-
rainbow_hcl(length(unique(p[[row_col]])))[sort_levels_values(
as.numeric(as.factor(p[[row_col]]))[order.dendrogram(dend_row)]
)]
# Change Label
if(length(as.character(p[[row_col]]))==0){
labels(dend_row) <- p$`sample label`
}else{
labels(dend_row) <- paste(as.character(p[[row_col]])[order.dendrogram(dend_row)],
"(",p$`sample label`[order.dendrogram(dend_row)],")",
sep = "")
}
# Hang
dend_row <- hang.dendrogram(dend_row,hang = 0.1)
# Label Size
dend_row <- set(dend_row, "labels_cex",1)
# pdf(file = "Dendrogram_Sample.pdf")
plot(dend_row,
main = "Clustered Samples",
horiz =  TRUE,  nodePar = list(cex = .007))
if(!length(iris_species)==0){
l
egend("topleft", legend = levels(as.factor(p[[row_col]])), fill = rainbow_hcl(length(unique(p[[row_col]]))))
}
plot(dend_row,
main = "Clustered Samples",
horiz =  TRUE,  nodePar = list(cex = .007))
if(!length(iris_species)==0){
legend("topleft", legend = levels(as.factor(p[[row_col]])), fill = rainbow_hcl(length(unique(p[[row_col]]))))
}
if(row_branchColorNumber==1){
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col='black')
}else{
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col=brewer.pal)
}
# Label Color
labels_colors(dend_row) <-
rainbow_hcl(length(unique(p[[row_col]])))[sort_levels_values(
as.numeric(as.factor(p[[row_col]]))[order.dendrogram(dend_row)]
)]
# Change Label
if(length(as.character(p[[row_col]]))==0){
labels(dend_row) <- p$`sample label`
}else{
labels(dend_row) <- paste(as.character(p[[row_col]])[order.dendrogram(dend_row)],
"(",p$`sample label`[order.dendrogram(dend_row)],")",
sep = "")
}
# Hang
dend_row <- hang.dendrogram(dend_row,hang = 0.1)
# Label Size
dend_row <- set(dend_row, "labels_cex",1)
# pdf(file = "Dendrogram_Sample.pdf")
plot(dend_row,
main = "Clustered Samples",
horiz =  TRUE,  nodePar = list(cex = .007))
if(!length(iris_species)==0){
legend("topleft", legend = levels(as.factor(p[[row_col]])), fill = rainbow_hcl(length(unique(p[[row_col]]))))
}
if(row_branchColorNumber==1){
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col='black')
}else{
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col=brewer.pal(name="Spectral"))
}
# Label Color
labels_colors(dend_row) <-
rainbow_hcl(length(unique(p[[row_col]])))[sort_levels_values(
as.numeric(as.factor(p[[row_col]]))[order.dendrogram(dend_row)]
)]
# Change Label
if(length(as.character(p[[row_col]]))==0){
labels(dend_row) <- p$`sample label`
}else{
labels(dend_row) <- paste(as.character(p[[row_col]])[order.dendrogram(dend_row)],
"(",p$`sample label`[order.dendrogram(dend_row)],")",
sep = "")
}
# Hang
dend_row <- hang.dendrogram(dend_row,hang = 0.1)
# Label Size
dend_row <- set(dend_row, "labels_cex",1)
# pdf(file = "Dendrogram_Sample.pdf")
plot(dend_row,
main = "Clustered Samples",
horiz =  TRUE,  nodePar = list(cex = .007))
if(!length(iris_species)==0){
legend("topleft", legend = levels(as.factor(p[[row_col]])), fill = rainbow_hcl(length(unique(p[[row_col]]))))
}
if(row_branchColorNumber==1){
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col='black')
}else{
dend_row <- color_branches(dend_row, k=row_branchColorNumber,
col=brewer.pal(n=row_branchColorNumber,name="Spectral"))
}
# Label Color
labels_colors(dend_row) <-
rainbow_hcl(length(unique(p[[row_col]])))[sort_levels_values(
as.numeric(as.factor(p[[row_col]]))[order.dendrogram(dend_row)]
)]
# Change Label
if(length(as.character(p[[row_col]]))==0){
labels(dend_row) <- p$`sample label`
}else{
labels(dend_row) <- paste(as.character(p[[row_col]])[order.dendrogram(dend_row)],
"(",p$`sample label`[order.dendrogram(dend_row)],")",
sep = "")
}
# Hang
dend_row <- hang.dendrogram(dend_row,hang = 0.1)
# Label Size
dend_row <- set(dend_row, "labels_cex",1)
# pdf(file = "Dendrogram_Sample.pdf")
plot(dend_row,
main = "Clustered Samples",
horiz =  TRUE,  nodePar = list(cex = .007))
if(!length(iris_species)==0){
legend("topleft", legend = levels(as.factor(p[[row_col]])), fill = rainbow_hcl(length(unique(p[[row_col]]))))
}
if(row_branchColorNumber==1){
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col='black')
}else{
dend_row <- color_branches(dend_row, k=row_branchColorNumber,
col=brewer.pal(n=row_branchColorNumber,name="Set1"))
}
# Label Color
labels_colors(dend_row) <-
rainbow_hcl(length(unique(p[[row_col]])))[sort_levels_values(
as.numeric(as.factor(p[[row_col]]))[order.dendrogram(dend_row)]
)]
# Change Label
if(length(as.character(p[[row_col]]))==0){
labels(dend_row) <- p$`sample label`
}else{
labels(dend_row) <- paste(as.character(p[[row_col]])[order.dendrogram(dend_row)],
"(",p$`sample label`[order.dendrogram(dend_row)],")",
sep = "")
}
# Hang
dend_row <- hang.dendrogram(dend_row,hang = 0.1)
# Label Size
dend_row <- set(dend_row, "labels_cex",1)
# pdf(file = "Dendrogram_Sample.pdf")
plot(dend_row,
main = "Clustered Samples",
horiz =  TRUE,  nodePar = list(cex = .007))
if(!length(iris_species)==0){
legend("topleft", legend = levels(as.factor(p[[row_col]])), fill = rainbow_hcl(length(unique(p[[row_col]]))))
}
levels(as.factor(p[[row_col]]))
unique(p[[row_col]])
legend("topleft", legend = unique(p[[row_col]]), fill = rainbow_hcl(length(unique(p[[row_col]]))))
labels_colors(dend_row)
as.numeric(as.factor(p[[row_col]]))
unique(p[[row_col]])
legend("topleft", legend = unique(p[[row_col]]), fill = rainbow_hcl(length(unique(p[[row_col]]))))
labels_colors(dend_row)
library(WCMC.Stat.HeatMap)
library(opencpu);
opencpu$browse("library/WCMC.Stat.HeatMap/www")
library(WCMC.Stat.HeatMap)
library(opencpu);
opencpu$browse("library/WCMC.Stat.HeatMap/www")
library(WCMC.Stat.HeatMap)
<<<<<<< HEAD
=======
library(opencpu);
opencpu$browse("library/WCMC.Stat.HeatMap/www")
library(WCMC.Stat.HeatMap)
library(opencpu);
opencpu$browse("library/WCMC.Stat.HeatMap/www")
library(WCMC.Stat.HeatMap)
library(opencpu);
opencpu$browse("library/WCMC.Stat.HeatMap/www")
library(WCMC.Stat.HeatMap)
library(opencpu);
opencpu$browse("library/WCMC.Stat.HeatMap/www")
e = fread("e.csv")[,-1]
f = fread("f.csv")[,-1]
p = fread("p.csv")[,-1]
if(scale_feature){
data_row = scale(t(e))
}else{
data_row = t(e)
}
rownames(data_row) = p$`sample label`
d_e <- dist(data_row, method = distance_method,p=minkowski_p)
hc_iris_row <- hclust(d_e, method = cluster_method)
iris_species <- rev(levels(as.factor(p[[row_col]])))
dend_row <- as.dendrogram(hc_iris_row)
# order it the closest we can to the order of the observations:
dend_row <- rotate(dend_row, 1:nrow(p))
# Branch Color
if(row_branchColorNumber==1){
dend_row <- color_branches(dend_row, k=row_branchColorNumber,col='black')
}else{
dend_row <- color_branches(dend_row, k=row_branchColorNumber,
col=brewer.pal(n=row_branchColorNumber,name="Set1"))
}
# Label Color
labels_colors(dend_row) <-
rainbow_hcl(length(unique(p[[row_col]])))[sort_levels_values(
as.numeric(as.factor(p[[row_col]]))[order.dendrogram(dend_row)]
)]
library(pacman)
pacman::p_load(data.table,parallel, dendextend,
colorspace,gplots,stringr,RColorBrewer)
pacman::p_load(data.table,parallel, dendextend,
colorspace,gplots,stringr,RColorBrewer,mvtnorm)
pacman::p_load(data.table,parallel, dendextend,
colorspace,gplots,stringr,RColorBrewer,mvtnorm)
library(WCMC.Stat.HeatMap)
library(WCMC.Stat.HeatMap)
>>>>>>> origin/master
