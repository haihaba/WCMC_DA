var = fviz_pca_var(res.pca, col.var="contrib")
print(fviz_pca_var(res.pca, col.var="contrib") +
scale_color_gradient2(low="white", mid="blue",
high="red", midpoint=median(var$data$contrib)) + theme_minimal())
contributes = get_pca_ind(res.pca)$contrib
print(fviz_pca_contrib(res.pca, choice = "var", axes = contribute_axes, top = num_of_var))
print(fviz_pca_ind(res.pca,
habillage = p[[color]], addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
res = 300) +
theme_minimal())
fviz_pca_ind(res.pca,
habillage = p[[color]], addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
res = 300) +
theme_minimal()
fviz_pca_ind(res.pca, addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
res = 300) +
theme_minimal()
p[[color]]
color
names(p)
color = "Organ"
fviz_pca_ind(res.pca,
habillage = p[[color]], addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
res = 300) +
theme_minimal()
p[[color]]
length(unique(p[[color]]))
length(unique(NULL))
length(unique(p[[color]]))<2
fwrite(scores,"Scores.csv")
scores = res.pca$x
loadings = res.pca$rotation
fwrite(scores,"Scores.csv")
fwrite(data.table(scores),"Scores.csv")
scores = res.pca$x
loadings = res.pca$rotation
fwrite(data.table(scores),"Scores.csv")
fwrite(data.table(loadings),"Loadings.csv")
var$data
get_pca_var(res.pca)
res.pca$var
library("FactoMineR")
res.pca <- PCA(decathlon2.active, graph = FALSE)
pacman::p_load(data.table,parallel, dendextend,
colorspace,gplots,stringr,RColorBrewer,mvtnorm,factoextra,FactoMineR)
res.pca <- PCA(decathlon2.active, graph = FALSE)
res.pca <- PCA(t(e))
res.pca <- PCA(t(e), graph = FALSE)
res.pca <- PCA(t(e), graph = FALSE)
res.pca
res.pca$var$coord
fwrite(data.table(res.pca$var$coord),"CompoundContribution.csv")
library(WCMC.Stat.PCA)
library(opencpu);
opencpu$browse("library/WCMC.Stat.PCA/www")
plot(data$label)
library(WCMC.Stat.PCA)
library(opencpu);
opencpu$browse("library/WCMC.Stat.PCA/www")
library(WCMC.Stat.PCA)
library(opencpu);
opencpu$browse("library/WCMC.Stat.PCA/www")
library(WCMC.Stat.PCA)
library(opencpu);
opencpu$browse("library/WCMC.Stat.PCA/www")
library(WCMC.Stat.PCA)
library(WCMC.Stat.PCA)
library(opencpu);
opencpu$browse("library/WCMC.Stat.PCA/www")
library(WCMC.Stat.PCA)
library(opencpu);
opencpu$browse("library/WCMC.Stat.PCA/www")
library(WCMC.Stat.PCA)
library(WCMC.Stat.PCA)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Stat.PCA)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Stat.PCA)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Stat.PCA)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Stat.PCA)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Stat.PCA)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
library(WCMC.Stat.PCA)
library(opencpu);
opencpu$browse("library/WCMC.Course2017.STAT/www")
force=F
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA",force =force)
devtools::install_github("slfan2013/WCMC_DA/WCMC.Stat.PCA",force =T)
opencpu$browse()
library(WCMC.Stat.PCA)
e = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\GC\\e.csv")[,-1]
f = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\GC\\f.csv")[,-1]
p = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\GC\\p.csv")[,-1]
pacman::p_load(data.table,parallel, dendextend,
colorspace,gplots,stringr,RColorBrewer,mvtnorm,factoextra,FactoMineR)
e = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\GC\\e.csv")[,-1]
f = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\GC\\f.csv")[,-1]
p = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\GC\\p.csv")[,-1]
res.pca <- prcomp(t(e),center = center, scale = scale)
print(fviz_screeplot(res.pca, ncp=10,linecolor="red",addlabels=T))
center=T
scale = T
score_axis = c(1,2)
names(p)
p$Treatments
e = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\GC\\e.csv")[,-1]
f = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\GC\\f.csv")[,-1]
p = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\GC\\p.csv")[,-1]
center=T
scale = T
score_axis = c(1,2)
color = 'Treatments'
num_of_var = 15
mainApp = function(input,
center=T,
scale = T,
score_axis = c(1,2),
color = 'Treatments',
num_of_var = 15,
contribute_axes=1
){
library(pacman)
pacman::p_load(data.table,parallel, dendextend,
colorspace,gplots,stringr,RColorBrewer,mvtnorm,factoextra,FactoMineR)
data. = WCMC.Fansly::FiehnLabFormat(input)
e = data.$e
f = data.$f
p = data.$p
# e = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\GC\\e.csv")[,-1]
# f = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\GC\\f.csv")[,-1]
# p = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\GC\\p.csv")[,-1]
e = as.matrix(e)
# rownames(e) = f[[length(f)]]
# e = t(apply(e,1,function(x){
#   x[is.na(x)] = 0.5*min(x,na.rm = T)
#   return(x)
# }))
#pca
res.pca <- prcomp(t(e),center = center, scale = scale)
# eig.val <- get_eigenvalue(res.pca)
png(filename = "ScreePlot.png",width=800,height=600)
print(fviz_screeplot(res.pca, ncp=10,linecolor="red",addlabels=T))
dev.off()
png(filename = "Contributer.png",width=800,height=800)
var = fviz_pca_var(res.pca, col.var="contrib")
print(fviz_pca_var(res.pca, col.var="contrib") +
scale_color_gradient2(low="white", mid="blue",
high="red", midpoint=median(var$data$contrib)) + theme_minimal())
dev.off()
contributes = get_pca_ind(res.pca)$contrib
png(filename = "ContributerSingleDim.png",width=800,height=800)
print(fviz_pca_contrib(res.pca, choice = "var", axes = as.numeric(contribute_axes), top = num_of_var))
dev.off()
png(filename = "ScorePlot.png",width=800,height=800)
if(length(unique(p[[color]]))<2){
print(fviz_pca_ind(res.pca,addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
res = 300) +
theme_minimal())
}else{
print(fviz_pca_ind(res.pca,
habillage = p[[color]], addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
res = 300) +
theme_minimal())
}
dev.off()
scores = res.pca$x
loadings = res.pca$rotation
fwrite(data.table(scores),"Scores.csv")
fwrite(data.table(loadings),"Loadings.csv")
res.pca <- PCA(t(e), graph = FALSE)
fwrite(data.table(res.pca$var$coord),"CompoundContribution.csv")
zip(zipfile = "PCA.zip",files = c("Scores.csv",
"Loadings.csv",
"ScreePlot.png",
"Contributer.png",
"ContributerSingleDim.png",
"ScorePlot.png",
"CompoundContribution.csv"))
}
contribute_axes=1
library(pacman)
pacman::p_load(data.table,parallel, dendextend,
colorspace,gplots,stringr,RColorBrewer,mvtnorm,factoextra,FactoMineR)
e = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\GC\\e.csv")[,-1]
f = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\GC\\f.csv")[,-1]
p = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\GC\\p.csv")[,-1]
p$Treatments
e = as.matrix(e)
res.pca <- prcomp(t(e),center = center, scale = scale)
length(unique(p[[color]]))<2
print(fviz_pca_ind(res.pca,
habillage = p[[color]], addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
res = 300) +
theme_minimal())
library(opencpu);
opencpu$browse("library/WCMC.Stat.PCA/www")
library(WCMC.Stat.PCA)
library(opencpu);
opencpu$browse("library/WCMC.Stat.PCA/www")
e = fread("e.csv")[,-1]
f = fread("f.csv")[,-1]
p = fread("p.csv")[,-1]
library(pacman)
pacman::p_load(data.table,parallel, dendextend,
colorspace,gplots,stringr,RColorBrewer,mvtnorm,factoextra,FactoMineR)
e = fread("e.csv")[,-1]
f = fread("f.csv")[,-1]
p = fread("p.csv")[,-1]
e = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\e.csv")[,-1]
f = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\f.csv")[,-1]
p = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\p.csv")[,-1]
e = as.matrix(e)
res.pca <- prcomp(t(e),center = center, scale = scale)
scale
center
e = t(apply(e,1,function(x){
x[is.na(x)] = 0.5*min(x,na.rm = T)
return(x)
}))
print(fviz_pca_ind(res.pca,addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
res = 300) +
theme_minimal())
print(fviz_pca_ind(res.pca,
habillage = p[[color]], addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
res = 300) +
theme_minimal())
dim(t(e))
e = as.matrix(e)
res.pca <- prcomp(t(e),center = center, scale = scale)
print(fviz_pca_ind(res.pca,
habillage = p[[color]], addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
res = 300) +
theme_minimal())
names(p)
color = 'Treatment'
res.pca <- prcomp(t(e),center = center, scale = scale)
print(fviz_pca_ind(res.pca,
habillage = p[[color]], addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
res = 300) +
theme_minimal())
?fviz_pca_ind
print(fviz_pca_ind(res.pca,
habillage = p[[color]], addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",
res = 300) +
theme_minimal())
?fviz_pca_ind
print(fviz_pca_ind(res.pca,
habillage = p[[color]], addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",
res = 300,title="A") +
theme_minimal())
print(fviz_pca_ind(res.pca,
habillage = p[[color]], addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",
res = 300,title="Positive Mode") +
theme_minimal())
?fviz_pca_ind
print(fviz_pca_ind(res.pca,
habillage = p[[color]], addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",palette = "aaas"
res = 300,title="Positive Mode") +
theme_minimal())
print(fviz_pca_ind(res.pca,
habillage = p[[color]], addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",palette = "aaas",
res = 300,title="Positive Mode") +
theme_minimal())
p[[color]]
print(fviz_pca_ind(res.pca,
habillage = p[[color]], addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",palette = "aaas",
res = 300,title="Positive Mode") +
theme_minimal())
print(fviz_pca_contrib(res.pca, choice = "var", axes = as.numeric(contribute_axes), top = num_of_var))
print(fviz_pca_ind(res.pca,
habillage = p[[color]], addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",palette = "aaas",
res = 300,title="Positive Mode") +
theme_minimal())
?fviz_pca_ind
rep(c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),c(4,5,4,4,5,4,5,6))
color = rep(c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),c(4,5,4,4,5,4,5,6))
print(fviz_pca_ind(res.pca,
habillage = color, addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",palette = "aaas",
res = 300,title="Positive Mode") +
theme_minimal())
length(color)
dim(data)
dim(e)
color = rep(c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),c(4,5,4,4,5,4,5,5))
print(fviz_pca_ind(res.pca,
habillage = color, addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",palette = "aaas",
res = 300,title="Positive Mode") +
theme_minimal())
?fviz_pca_ind
color. = rep(c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),c(4,5,4,4,5,4,5,5))
color = 'Treatment'
print(fviz_pca_ind(res.pca,
habillage = p[[color]],palette=color., addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",palette = "aaas",
res = 300,title="Positive Mode") +
theme_minimal())
print(fviz_pca_ind(res.pca,
habillage = p[[color]],palette=c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"), addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",palette = "aaas",
res = 300,title="Positive Mode") +
theme_minimal())
print(fviz_pca_ind(res.pca,
habillage = p[[color]],palette=c("blue", "red"), addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",palette = "aaas",
res = 300,title="Positive Mode") +
theme_minimal())
print(fviz_pca_ind(res.pca,
habillage = p[[color]],
palette=c("blue"),
addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",palette = "aaas",
res = 300,title="Positive Mode") +
theme_minimal())
color. = rep(c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),c(4,5,4,4,5,4,5,5))
print(fviz_pca_ind(res.pca,
habillage = p[[color]],
palette=color.,
addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",
res = 300,title="Positive Mode") +
theme_minimal())
print(fviz_pca_ind(res.pca,
habillage = p[[color]],
palette=c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),
addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",
res = 300,title="Positive Mode") +
theme_minimal())
print(fviz_pca_ind(res.pca,
habillage = p[[color]],
palette=c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),
addEllipses = F, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",
res = 300,title="Positive Mode") +
theme_minimal())
print(fviz_pca_ind(res.pca,
habillage = p[[color]],
palette=c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),
addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",
res = 300,title="Positive Mode") +
theme_minimal())
e = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\e.csv")[,-1]
f = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\f.csv")[,-1]
p = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\p.csv")[,-1]
e = as.matrix(e)
e = t(apply(e,1,function(x){
x[is.na(x)] = 0.5*min(x,na.rm = T)
return(x)
}))
res.pca <- prcomp(t(e),center = center, scale = scale)
color. = rep(c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),c(4,5,4,4,5,4,5,5))
print(fviz_pca_ind(res.pca,
habillage = p[[color]],
palette=c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),
addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",
res = 300,title="Positive Mode") +
theme_minimal())
dim(p)
colnames(p)
color = 'Treatments'
print(fviz_pca_ind(res.pca,
habillage = p[[color]],
palette=c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),
addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",
res = 300,title="Positive Mode") +
theme_minimal())
e = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\e.csv")[,-1]
f = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\f.csv")[,-1]
p = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\p.csv")[,-1]
e = as.matrix(e)
e = t(apply(e,1,function(x){
x[is.na(x)] = 0.5*min(x,na.rm = T)
return(x)
}))
res.pca <- prcomp(t(e),center = center, scale = scale)
color. = rep(c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),c(4,5,4,4,5,4,5,5))
print(fviz_pca_ind(res.pca,
habillage = p[[color]],
palette=c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),
addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",
res = 300,title="Positive Mode") +
theme_minimal())
p[[color]]
unique(p[[color]])
print(fviz_pca_ind(res.pca,
habillage = factor(p[[color]],levels=unique(p[[color]])),
palette=c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),
addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",
res = 300,title="Positive Mode") +
theme_minimal())
print(fviz_pca_ind(res.pca,
habillage = factor(p[[color]],levels=unique(p[[color]])[c(1,3,5,7,2,4,6,8)]),
palette=c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),
addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",
res = 300,title="Positive Mode") +
theme_minimal())
e = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\e.csv")[,-1]
f = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\f.csv")[,-1]
p = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\p.csv")[,-1]
e = as.matrix(e)
# rownames(e) = f[[length(f)]]
e = t(apply(e,1,function(x){
x[is.na(x)] = 0.5*min(x,na.rm = T)
return(x)
}))
#pca
res.pca <- prcomp(t(e),center = center, scale = scale)
# eig.val <- get_eigenvalue(res.pca)
color. = rep(c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),c(4,5,4,4,5,4,5,5))
print(fviz_pca_ind(res.pca,
habillage = factor(p[[color]],levels=unique(p[[color]])[c(1,3,5,7,2,4,6,8)]),
palette=c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),
addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",
res = 300,title="GC") +
theme_minimal())
factor(p[[color]],levels=unique(p[[color]])[c(1,3,5,7,2,4,6,8)])
names(p)
color = 'Treatment'
print(fviz_pca_ind(res.pca,
habillage = factor(p[[color]],levels=unique(p[[color]])[c(1,3,5,7,2,4,6,8)]),
palette=c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),
addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",
res = 300,title="GC") +
theme_minimal())
print(fviz_pca_ind(res.pca,
habillage = factor(p[[color]],levels=unique(p[[color]])[c(1,3,5,7,2,4,6,8)]),
palette=c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),
addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",
res = 300,title="LC Negative Mode") +
theme_minimal())
e = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\e.csv")[,-1]
f = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\f.csv")[,-1]
p = fread("C:\\Users\\fansi\\Desktop\\mx 300486_Ganeshan\\p.csv")[,-1]
e = as.matrix(e)
# rownames(e) = f[[length(f)]]
e = t(apply(e,1,function(x){
x[is.na(x)] = 0.5*min(x,na.rm = T)
return(x)
}))
#pca
res.pca <- prcomp(t(e),center = center, scale = scale)
# eig.val <- get_eigenvalue(res.pca)
color. = rep(c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),c(4,5,4,4,5,4,5,5))
print(fviz_pca_ind(res.pca,
habillage = factor(p[[color]],levels=unique(p[[color]])[c(1,3,5,7,2,4,6,8)]),
palette=c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),
addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",
res = 300,title="LC Negative Mode") +
theme_minimal())
print(fviz_pca_ind(res.pca,
habillage = factor(p[[color]],levels=unique(p[[color]])[c(1,3,5,7,2,4,6,8)]),
palette=c("#FDBB84","#FC8D59","#E34A33","#B30000","#A1D99B","#74C476","#31A454","#006D2C"),
addEllipses = TRUE, ellipse.level = 0.95,repel=T,axes = as.numeric(score_axis),
geom = "point",
res = 300,title="LC Positive Mode") +
theme_minimal())
if (!require("devtools"))
install.packages('devtools', repos="http://cran.rstudio.com/")
if (!require("opencpu"))
install.packages('opnecpu', repos="http://cran.rstudio.com/")
if (!require("RCurl"))
install.packages('RCurl', repos="http://cran.rstudio.com/")
library(devtools)
library(RCurl)
source('https://bioconductor.org/biocLite.R')
install_github('barupal/metamapp')
library(MetaMapp2016)
library(opencpu)
opencpu$browse('/library/MetaMapp2016/www')
if (!require("devtools"))
install.packages('devtools', repos="http://cran.rstudio.com/")
if (!require("opencpu"))
install.packages('opnecpu', repos="http://cran.rstudio.com/")
if (!require("RCurl"))
install.packages('RCurl', repos="http://cran.rstudio.com/")
library(devtools)
library(RCurl)
source('https://bioconductor.org/biocLite.R')
install_github('barupal/metamapp')
library(MetaMapp2016)
library(opencpu)
opencpu$browse('/library/MetaMapp2016/www')
